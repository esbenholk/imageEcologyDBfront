"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Upload.tsx":
/*!***********************************!*\
  !*** ./src/components/Upload.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Upload: function() { return /* binding */ Upload; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Gallery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Gallery */ \"(app-pages-browser)/./src/components/Gallery.tsx\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var _mosaic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mosaic */ \"(app-pages-browser)/./src/components/mosaic.tsx\");\n// Upload.tsx\n/* __next_internal_client_entry_do_not_use__ Upload auto */ \nvar _s = $RefreshSig$();\n\n\n\n // adjust path if needed\nfunction Upload() {\n    _s();\n    // ===== State\n    const [image, setImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [text, setText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const textArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [uploading, setUploadLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showUpload, setShowUpload] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showGallery, setShowGallery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // For prompt-based generation within uploader (unchanged)\n    const [generatedImage, setGeneratedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [remixedPrompt, setRemixedPrompt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // tags\n    const [words, setWords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentWord, setCurrentWord] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // classification\n    const [classes, setClasses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentClass, setCurrentClass] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // communities\n    const [community, setCommunity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [availableCommunities, setAvailableCommunities] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // data + pagination\n    const [news, setNews] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loadIndex, setLoadIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isFetchingRecent, setIsFetchingRecent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // misc\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [succes, setSucces] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // ===== Remix UI (moved here from Gallery)\n    const [selectedImages, setSelectedImages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showRemixer, setShowRemixer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [collagedImage, setCollagedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [remixLoading, setRemixLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedParentIds, setSelectedParentIDs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // ===== Refs to handle dev strict-mode + re-entrancy\n    const didLoadRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const inFlightRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const remixerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const snapToPane = (pane)=>{\n        var _containerRef_current, _containerRef_current1;\n        const el = pane === \"remixer\" ? remixerRef.current : pane === \"gallery\" ? (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.children[1] : (_containerRef_current1 = containerRef.current) === null || _containerRef_current1 === void 0 ? void 0 : _containerRef_current1.children[0];\n        if (!el || !containerRef.current) return;\n        // Only do the horizontal scroll behavior on small screens\n        if (window.matchMedia(\"(max-width: 768px)\").matches) {\n            containerRef.current.scrollTo({\n                left: el.offsetLeft,\n                behavior: \"smooth\"\n            });\n        }\n    };\n    // ===== Socket\n    const socketRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let storedUserId = sessionStorage.getItem(\"userId\");\n        if (!storedUserId) {\n            storedUserId = Math.random().toString(36).substring(7);\n            sessionStorage.setItem(\"userId\", storedUserId);\n        }\n        const s = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_3__.io)(\"https://dancingwai-11f115b681e2.herokuapp.com\", {\n            autoConnect: false\n        });\n        socketRef.current = s;\n        s.connect();\n        const onReceive = (message)=>console.log(\"gets io message\", message);\n        const onConnect = ()=>console.log(\"connects\");\n        const onHello = (msg)=>console.log(\"hello\", msg);\n        s.on(\"receiveMessage\", onReceive);\n        s.on(\"connect\", onConnect);\n        s.on(\"hello\", onHello);\n        return ()=>{\n            s.off(\"receiveMessage\", onReceive);\n            s.off(\"connect\", onConnect);\n            s.off(\"hello\", onHello);\n            s.disconnect();\n            socketRef.current = null;\n        };\n    }, []);\n    // ===== Initial load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (didLoadRef.current) return;\n        didLoadRef.current = true;\n        void fetchRecentImages();\n    }, []);\n    // ===== Fetch images\n    const fetchRecentImages = async ()=>{\n        if (inFlightRef.current) return;\n        inFlightRef.current = true;\n        const ac = new AbortController();\n        setIsFetchingRecent(true);\n        setError(\"\");\n        try {\n            const res = await fetch(\"/api/cloudinary/recent?skip=\".concat(loadIndex, \"&limit=10\"), {\n                signal: ac.signal,\n                cache: \"no-store\"\n            });\n            if (!res.ok) throw new Error(\"HTTP \".concat(res.status));\n            const data = await res.json();\n            if (Array.isArray(data) && data.length) {\n                const mapped = data.map((d)=>({\n                        title: d.title,\n                        url: d.url,\n                        tags: d.tags,\n                        aiCaption: d.caption,\n                        description: d.alt || \"Untitled\",\n                        aiTitle: d.ai_title,\n                        aiVibe: d.ai_vibe,\n                        aiObjects: d.ai_objects,\n                        aiFeeling: d.ai_feeling,\n                        id: d.id,\n                        community: d.community,\n                        parentIds: d.parentIds,\n                        ai_so_me_type: d.aiSoMeType,\n                        aiStyle: d.aiStyle,\n                        aiTrend: d.aiTrend,\n                        aiPeople: d.aiPeople\n                    }));\n                setNews((prev)=>[\n                        ...prev,\n                        ...mapped\n                    ]);\n                setLoadIndex((prev)=>prev + 10);\n            }\n        } catch (e) {\n            if ((e === null || e === void 0 ? void 0 : e.name) !== \"AbortError\") {\n                setError(e instanceof Error ? e.message : \"Failed to fetch recent images\");\n            }\n        } finally{\n            setIsFetchingRecent(false);\n            inFlightRef.current = false;\n        }\n        return ()=>ac.abort();\n    };\n    // ===== Derive available communities\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const uniqueFromNews = Array.from(new Set(news.map((n)=>{\n            var _n_community_toLowerCase, _n_community;\n            return (_n_community = n.community) === null || _n_community === void 0 ? void 0 : (_n_community_toLowerCase = _n_community.toLowerCase) === null || _n_community_toLowerCase === void 0 ? void 0 : _n_community_toLowerCase.call(_n_community).trim();\n        }).filter(Boolean)));\n        const presets = [\n            \"brainrot\",\n            \"thirsttrap\",\n            \"lifestyle\"\n        ];\n        const merged = Array.from(new Set([\n            ...uniqueFromNews,\n            ...presets\n        ]));\n        setAvailableCommunities(merged);\n    }, [\n        news\n    ]);\n    // ===== UX helpers\n    const showSucces = function() {\n        let duration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1500;\n        setSucces(true);\n        setTimeout(()=>setSucces(false), duration);\n    };\n    // ----- Tag input handlers\n    const handleKeyDown = (e)=>{\n        if (e.key === \" \" || e.keyCode === 32 || e.keyCode === 0 || e.key === \"Enter\") {\n            e.preventDefault();\n            if (currentWord.trim()) {\n                setWords((prev)=>[\n                        ...prev,\n                        currentWord.trim()\n                    ]);\n                setCurrentWord(\"\");\n            }\n        }\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        if (value.endsWith(\" \") || value.endsWith(\"\\n\")) {\n            if (currentWord.trim()) {\n                setWords((prev)=>[\n                        ...prev,\n                        currentWord.trim()\n                    ]);\n                setCurrentWord(\"\");\n            }\n        } else {\n            setCurrentWord(value);\n        }\n    };\n    const handleRemoveWord = (index)=>{\n        setWords((prev)=>prev.filter((_, i)=>i !== index));\n    };\n    const joinWithComma = (arr)=>arr.join(\", \");\n    // ----- Classification handlers\n    const handleClassKeyDown = (e)=>{\n        if (e.key === \" \" || e.keyCode === 32 || e.keyCode === 0 || e.key === \"Enter\") {\n            e.preventDefault();\n            if (currentClass.trim()) {\n                setClasses((prev)=>[\n                        ...prev,\n                        currentClass.trim()\n                    ]);\n                setCurrentClass(\"\");\n            }\n        }\n    };\n    const handleClassInputChange = (e)=>{\n        const value = e.target.value;\n        if (value.endsWith(\" \") || value.endsWith(\"\\n\")) {\n            if (currentClass.trim()) {\n                setClasses((prev)=>[\n                        ...prev,\n                        currentClass.trim()\n                    ]);\n                setCurrentClass(\"\");\n            }\n        } else {\n            setCurrentClass(value);\n        }\n    };\n    const handleRemoveClass = (index)=>{\n        setClasses((prev)=>prev.filter((_, i)=>i !== index));\n    };\n    // ===== Generation inside Upload (prompt-based)\n    const generateImage = async ()=>{\n        var _textArea_current;\n        setLoading(true);\n        var _textArea_current_value;\n        const promptText = (_textArea_current_value = (_textArea_current = textArea.current) === null || _textArea_current === void 0 ? void 0 : _textArea_current.value) !== null && _textArea_current_value !== void 0 ? _textArea_current_value : \"\";\n        if (promptText !== \"\" || words.length > 0) {\n            try {\n                const response = await fetch(\"/api/generateImage?prompt=\".concat(encodeURIComponent(promptText || \"utopias\"), \"&remixed=yes&adjectives=\").concat(encodeURIComponent(joinWithComma(words) || \"\")));\n                const data = await response.json();\n                if (!response.ok) throw new Error(data.error || \"Generation failed\");\n                setImage(null);\n                setGeneratedImage(data.imageUrl);\n                setRemixedPrompt(data.remixedPrompt);\n                setText(data.prompt);\n            } catch (e) {\n                setError(\"that didnt work\");\n            } finally{\n                setLoading(false);\n            }\n        } else {\n            setError(\"Alchymist, you need to describe your utopia fragment\");\n            setLoading(false);\n        }\n    };\n    // ===== Remix flows (moved here)\n    const onToggleSelection = (image)=>{\n        setSelectedImages((prev)=>prev.some((img)=>img.url === image.url) ? prev.filter((img)=>img.url !== image.url) : [\n                ...prev,\n                image\n            ]);\n    };\n    const generateRemixImage = async ()=>{\n        setRemixLoading(true);\n        setCollagedImage(null);\n        if (selectedImages.length > 1) {\n            try {\n                const descriptions = [];\n                const tags = [];\n                const ids = [];\n                const styles = [];\n                const communities = [];\n                const trends = [];\n                const people = [];\n                const objects = [];\n                for (const el of selectedImages){\n                    console.log(\"selected IMAGE:\", el);\n                    descriptions.push(el.description);\n                    ids.push(el.url);\n                    (el.tags || []).forEach((t)=>tags.push(t));\n                    if (el.aiStyle) styles.push(el.aiStyle);\n                    if (el.community) communities.push(el.community);\n                    if (el.aiTrend) trends.push(el.aiTrend);\n                    (el.aiPeople || []).forEach((t)=>people.push(t));\n                    if (el.aiObjects) objects.push(el.aiObjects);\n                }\n                // store the lineage\n                setSelectedParentIDs(ids);\n                // helpful de-dupe + trim\n                const uniq = (arr)=>Array.from(new Set(arr.filter(Boolean).map((s)=>s.trim())));\n                const payload = {\n                    // keep compatibility with existing server code\n                    prompt: descriptions.join(\", \") || \"utopias\",\n                    adjectives: uniq(tags).join(\", \"),\n                    // new rich context\n                    styles: uniq(styles),\n                    communities: uniq(communities),\n                    trends: uniq(trends),\n                    descriptions,\n                    parentIds: ids,\n                    people: uniq(people)\n                };\n                const response = await fetch(\"/api/generateImage\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(payload)\n                });\n                const data = await response.json();\n                setRemixedPrompt(data.remixedPrompt || \"\");\n                setText(data.remixedPrompt || \"\");\n                if (tags.length) setWords(uniq(tags));\n                if (!response.ok) throw new Error(data.error || \"Generation failed\");\n                setGeneratedImage(data.imageUrl);\n                setImage(data.imageUrl); // if you want the uploader preview populated too\n            } catch (err) {\n                setError(\"remix generation failed\");\n            } finally{\n                setRemixLoading(false);\n            }\n        } else {\n            setRemixLoading(false);\n        }\n    };\n    const generateRemixCollage = async ()=>{\n        if (selectedImages.length < 2) return;\n        setRemixLoading(true);\n        setGeneratedImage(null);\n        try {\n            const ids = selectedImages.map((i)=>i.url);\n            setSelectedParentIDs(ids);\n            const dataUrl = await (0,_mosaic__WEBPACK_IMPORTED_MODULE_4__.mosaicBlend)(ids, {\n                size: 1024,\n                block: 32,\n                returnType: \"dataURL\",\n                seed: undefined\n            });\n            if (!text) setText(\"collage of fragments\");\n            if (words.length === 0) {\n                const tags = selectedImages.flatMap((i)=>i.tags || []);\n                setWords(tags);\n            }\n            setImage(dataUrl);\n            setCollagedImage(dataUrl);\n        } catch (e) {\n            setError(\"collage failed\");\n        } finally{\n            setRemixLoading(false);\n        }\n    };\n    // ===== Unified Upload (supports normal + remix)\n    const upLoadImage = async (_image, extras)=>{\n        try {\n            var _textArea_current;\n            setUploadLoading(true);\n            var _textArea_current_value;\n            const promptText = (_textArea_current_value = (_textArea_current = textArea.current) === null || _textArea_current === void 0 ? void 0 : _textArea_current.value) !== null && _textArea_current_value !== void 0 ? _textArea_current_value : \"\";\n            if (_image != null) {\n                var _extras_tagsOverride;\n                const response = await fetch(\"/api/cloudinary/upload\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        imageUrl: _image,\n                        title: promptText || \"_\",\n                        tags: joinWithComma((_extras_tagsOverride = extras === null || extras === void 0 ? void 0 : extras.tagsOverride) !== null && _extras_tagsOverride !== void 0 ? _extras_tagsOverride : words),\n                        classes: joinWithComma(classes),\n                        community,\n                        parentIds: extras === null || extras === void 0 ? void 0 : extras.parentIds,\n                        remixedPrompt: extras === null || extras === void 0 ? void 0 : extras.remixedPrompt\n                    })\n                });\n                const data = await response.json();\n                if (!response.ok) {\n                    setError(\"this image is bad\");\n                    throw new Error(data.error || \"Upload failed\");\n                } else {\n                    const card = {\n                        title: data.title,\n                        url: data.url,\n                        tags: data.tags,\n                        aiCaption: data.caption,\n                        description: data.alt || \"Untitled\",\n                        aiTitle: data.ai_title,\n                        aiVibe: data.ai_vibe,\n                        aiObjects: data.ai_objects,\n                        aiFeeling: data.ai_feeling,\n                        id: data.id,\n                        community: data.community,\n                        parentIds: data.parentIds,\n                        ai_so_me_type: data.aiSoMeType,\n                        aiStyle: data.aiStyle,\n                        aiTrend: data.aiTrend,\n                        aiPeople: data.aiPeople\n                    };\n                    shareImageToSocket(card);\n                    poorImageIntoCouldron(card);\n                }\n            } else {\n                setError(\"Alchymist, you need to invent a scene\");\n            }\n        } catch (e) {\n            setError(\"image is bad\");\n        } finally{\n            // reset UI\n            setLoading(false);\n            setUploadLoading(false);\n            setShowUpload(false);\n            setImage(null);\n            setText(\"\");\n            setCommunity(\"\");\n            setClasses([]);\n            setWords([]);\n            setGeneratedImage(null);\n            setCollagedImage(null);\n            setSelectedParentIDs([]);\n            setSelectedImages([]);\n            setShowRemixer(false);\n        }\n    };\n    // ===== File & socket helpers\n    const handleImageChange = (e)=>{\n        var _e_target_files;\n        const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = ()=>setImage(reader.result);\n            reader.readAsDataURL(file);\n        }\n    };\n    const shareImageToSocket = (_image)=>{\n        var _socketRef_current;\n        (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.emit(\"hello\", _image);\n    };\n    const poorImageIntoCouldron = (_image)=>{\n        setNews((prev)=>[\n                _image,\n                ...prev\n            ]);\n        showSucces();\n        setImage(null);\n        setGeneratedImage(null);\n        setShowGallery(false);\n        setLoading(false);\n        setUploadLoading(false);\n        setShowUpload(false);\n        setText(\"\");\n        setWords([]);\n        setGeneratedImage(null);\n    };\n    // ===== Submit\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setLoading(true);\n        if (image) {\n            await upLoadImage(image);\n        } else if (generatedImage) {\n            await upLoadImage(generatedImage);\n        } else {\n            setLoading(false);\n        // no image provided\n        }\n    };\n    // ===== Render\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mainContainer\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: uploading ? \"uploading uploader\" : \"uploader\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"contribute to the image ecology simulation\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 523,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"image-upload\",\n                                className: !loading ? \"imgUploadBtn active super-default\" : \"imgUploadBtn passive super-default\",\n                                children: image ? \"upload another image\" : \"upload new image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 526,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                id: \"image-upload\",\n                                type: \"file\",\n                                accept: \"image/*\",\n                                onChange: handleImageChange,\n                                className: \"sr-only\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 536,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 525,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"imageResultContainer\",\n                        children: [\n                            \" \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"imageResult\",\n                                children: [\n                                    image ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"closebtn\",\n                                                type: \"button\",\n                                                onClick: ()=>setImage(null),\n                                                children: \"X\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                                lineNumber: 550,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                src: image,\n                                                alt: \"Preview\",\n                                                className: \"subImage\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                                lineNumber: 557,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true) : null,\n                                    uploading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"loaderAnim\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 560,\n                                        columnNumber: 26\n                                    }, this) : null\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 547,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 545,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image description\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 565,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                ref: textArea,\n                                id: \"text\",\n                                value: text,\n                                autoCorrect: \"false\",\n                                onChange: (e)=>setText(e.target.value),\n                                placeholder: \"describe the image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 566,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 564,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"wordinputs error\" : \"wordinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image tagging\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 577,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: currentWord,\n                                autoCorrect: \"false\",\n                                onChange: handleInputChange,\n                                onKeyDown: handleKeyDown,\n                                className: \"mt-2 p-2 border rounded-md\",\n                                placeholder: \"optional: tag the image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 578,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: words.map((word, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"button\",\n                                        onClick: ()=>handleRemoveWord(index),\n                                        className: \"adjBtn\",\n                                        children: [\n                                            word,\n                                            \" ✖\"\n                                        ]\n                                    }, \"\".concat(word, \"-\").concat(index), true, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 589,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 587,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 576,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image classification\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 602,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: currentClass,\n                                autoCorrect: \"false\",\n                                onChange: handleClassInputChange,\n                                onKeyDown: handleClassKeyDown,\n                                className: \"mt-2 p-2 border rounded-md\",\n                                placeholder: \"optional: image population/type\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 603,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: classes.map((cls, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleRemoveClass(index),\n                                        className: \"adjBtn\",\n                                        type: \"button\",\n                                        children: [\n                                            cls,\n                                            \" ✖\"\n                                        ]\n                                    }, \"\".concat(cls, \"-\").concat(index), true, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 614,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 612,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 601,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"community\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 627,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: availableCommunities.map((comm)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"button\",\n                                        onClick: ()=>setCommunity(comm),\n                                        className: \"adjBtn \".concat(community === comm ? \"active\" : \"\"),\n                                        children: comm\n                                    }, comm, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 630,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 628,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: community,\n                                onChange: (e)=>setCommunity(e.target.value.toLowerCase()),\n                                placeholder: \"or write your own community\",\n                                className: \"mt-2 p-2 border rounded-md\",\n                                autoCorrect: \"false\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 640,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 626,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons right\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"submit\",\n                            className: loading ? \"passive\" : generatedImage ? \"active\" : image ? \"active\" : \"passive\",\n                            children: loading ? \"loading content\" : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: \"upload\"\n                            }, void 0, false)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 651,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 650,\n                        columnNumber: 9\n                    }, this),\n                    succes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"succes\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: \"upload complete\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 679,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 678,\n                        columnNumber: 11\n                    }, this),\n                    error && error !== \"\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"succes error\",\n                        onClick: ()=>{\n                            setError(\"\");\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 689,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 683,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 519,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"gallery\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Gallery__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        news: news,\n                        communityCategories: availableCommunities,\n                        selectedImages: selectedImages,\n                        onToggleSelection: onToggleSelection,\n                        onOpenRemixer: ()=>{\n                            setShowRemixer(true);\n                            snapToPane(\"remixer\"); // scrolls to the right pane on mobile\n                        }\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 696,\n                        columnNumber: 9\n                    }, this),\n                    !isFetchingRecent && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            marginTop: 16\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            className: \"adjBtn\",\n                            onClick: ()=>fetchRecentImages(),\n                            children: \"load more\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 708,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 707,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 695,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"aside\", {\n                className: 'remixer open\"}',\n                ref: remixerRef,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"remix images from the ecology simulation\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 721,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons galleryUploaderButtons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                disabled: remixLoading,\n                                className: !remixLoading ? \"active super-default\" : \"passive super-default\",\n                                onClick: (e)=>{\n                                    e.preventDefault();\n                                    generateRemixImage();\n                                },\n                                children: generatedImage ? \"recreate AI remix\" : \"AI remix\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 724,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                disabled: remixLoading,\n                                className: !remixLoading ? \"active super-default\" : \"passive super-default\",\n                                onClick: (e)=>{\n                                    e.preventDefault();\n                                    generateRemixCollage();\n                                },\n                                children: collagedImage ? \"reblend collage\" : \"collage\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 737,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 723,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"imageResult\",\n                        children: remixLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"loaderAnim\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 775,\n                            columnNumber: 13\n                        }, this) : generatedImage ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            src: generatedImage,\n                            alt: \"Generated\",\n                            className: \"w-full rounded-lg\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 777,\n                            columnNumber: 13\n                        }, this) : collagedImage ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            src: collagedImage,\n                            alt: \"Generated\",\n                            className: \"w-full rounded-lg\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 783,\n                            columnNumber: 13\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \" remixSelection\",\n                                    style: {\n                                        [\"--cols\"]: Math.max(1, Math.ceil(Math.sqrt(selectedImages.length))),\n                                        [\"--rows\"]: Math.max(1, Math.ceil(selectedImages.length / Math.max(1, Math.ceil(Math.sqrt(selectedImages.length))))),\n                                        [\"--gap\"]: \"8px\",\n                                        [\"--radius\"]: \"8px\"\n                                    },\n                                    children: selectedImages.map((img, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: img.url\n                                        }, index, false, {\n                                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                            lineNumber: 814,\n                                            columnNumber: 19\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                    lineNumber: 790,\n                                    columnNumber: 15\n                                }, this),\n                                selectedImages.length < 2 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"imageNotice\",\n                                    children: \"u need at least 2 images from the db\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                    lineNumber: 819,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 773,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 720,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n        lineNumber: 518,\n        columnNumber: 5\n    }, this);\n}\n_s(Upload, \"LnIok3g26eC5CBFKKQEYVW7eJ0g=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Upload.tsx\n"));

/***/ })

});