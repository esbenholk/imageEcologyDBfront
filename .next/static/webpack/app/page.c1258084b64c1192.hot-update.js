"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Upload.tsx":
/*!***********************************!*\
  !*** ./src/components/Upload.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Upload: function() { return /* binding */ Upload; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Gallery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Gallery */ \"(app-pages-browser)/./src/components/Gallery.tsx\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var _mosaic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mosaic */ \"(app-pages-browser)/./src/components/mosaic.tsx\");\n// Upload.tsx\n/* __next_internal_client_entry_do_not_use__ Upload auto */ \nvar _s = $RefreshSig$();\n\n\n\n // adjust path if needed\nfunction Upload() {\n    _s();\n    // ===== State\n    const [image, setImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [text, setText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const textArea = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [uploading, setUploadLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showUpload, setShowUpload] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showGallery, setShowGallery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // For prompt-based generation within uploader (unchanged)\n    const [generatedImage, setGeneratedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [remixedPrompt, setRemixedPrompt] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // tags\n    const [words, setWords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentWord, setCurrentWord] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // classification\n    const [classes, setClasses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentClass, setCurrentClass] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // communities\n    const [community, setCommunity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [availableCommunities, setAvailableCommunities] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // data + pagination\n    const [news, setNews] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loadIndex, setLoadIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isFetchingRecent, setIsFetchingRecent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // misc\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [succes, setSucces] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // ===== Remix UI (moved here from Gallery)\n    const [selectedImages, setSelectedImages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showRemixer, setShowRemixer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [collagedImage, setCollagedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [remixLoading, setRemixLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedParentIds, setSelectedParentIDs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // ===== Refs to handle dev strict-mode + re-entrancy\n    const didLoadRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const inFlightRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const remixerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const snapToPane = (pane)=>{\n        var _containerRef_current, _containerRef_current1;\n        const el = pane === \"remixer\" ? remixerRef.current : pane === \"gallery\" ? (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.children[1] : (_containerRef_current1 = containerRef.current) === null || _containerRef_current1 === void 0 ? void 0 : _containerRef_current1.children[0];\n        if (!el || !containerRef.current) return;\n        // Only do the horizontal scroll behavior on small screens\n        if (window.matchMedia(\"(max-width: 768px)\").matches) {\n            containerRef.current.scrollTo({\n                left: el.offsetLeft,\n                behavior: \"smooth\"\n            });\n        }\n    };\n    // ===== Socket\n    const socketRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let storedUserId = sessionStorage.getItem(\"userId\");\n        if (!storedUserId) {\n            storedUserId = Math.random().toString(36).substring(7);\n            sessionStorage.setItem(\"userId\", storedUserId);\n        }\n        const s = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_3__.io)(\"https://dancingwai-11f115b681e2.herokuapp.com\", {\n            autoConnect: false\n        });\n        socketRef.current = s;\n        s.connect();\n        const onReceive = (message)=>console.log(\"gets io message\", message);\n        const onConnect = ()=>console.log(\"connects\");\n        const onHello = (msg)=>console.log(\"hello\", msg);\n        s.on(\"receiveMessage\", onReceive);\n        s.on(\"connect\", onConnect);\n        s.on(\"hello\", onHello);\n        return ()=>{\n            s.off(\"receiveMessage\", onReceive);\n            s.off(\"connect\", onConnect);\n            s.off(\"hello\", onHello);\n            s.disconnect();\n            socketRef.current = null;\n        };\n    }, []);\n    // ===== Initial load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (didLoadRef.current) return;\n        didLoadRef.current = true;\n        void fetchRecentImages();\n    }, []);\n    // ===== Fetch images\n    const fetchRecentImages = async ()=>{\n        if (inFlightRef.current) return;\n        inFlightRef.current = true;\n        const ac = new AbortController();\n        setIsFetchingRecent(true);\n        setError(\"\");\n        try {\n            const res = await fetch(\"/api/cloudinary/recent?skip=\".concat(loadIndex, \"&limit=10\"), {\n                signal: ac.signal,\n                cache: \"no-store\"\n            });\n            if (!res.ok) throw new Error(\"HTTP \".concat(res.status));\n            const data = await res.json();\n            if (Array.isArray(data) && data.length) {\n                const mapped = data.map((d)=>({\n                        title: d.title,\n                        url: d.url,\n                        tags: d.tags,\n                        aiCaption: d.caption,\n                        description: d.alt || \"Untitled\",\n                        aiTitle: d.ai_title,\n                        aiVibe: d.ai_vibe,\n                        aiObjects: d.ai_objects,\n                        aiFeeling: d.ai_feeling,\n                        id: d.id,\n                        community: d.community,\n                        parentIds: d.parentIds,\n                        ai_so_me_type: d.aiSoMeType,\n                        aiStyle: d.aiStyle,\n                        aiTrend: d.aiTrend,\n                        aiPeople: d.aiPeople\n                    }));\n                setNews((prev)=>[\n                        ...prev,\n                        ...mapped\n                    ]);\n                setLoadIndex((prev)=>prev + 10);\n            }\n        } catch (e) {\n            if ((e === null || e === void 0 ? void 0 : e.name) !== \"AbortError\") {\n                setError(e instanceof Error ? e.message : \"Failed to fetch recent images\");\n            }\n        } finally{\n            setIsFetchingRecent(false);\n            inFlightRef.current = false;\n        }\n        return ()=>ac.abort();\n    };\n    // ===== Derive available communities\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const uniqueFromNews = Array.from(new Set(news.map((n)=>{\n            var _n_community_toLowerCase, _n_community;\n            return (_n_community = n.community) === null || _n_community === void 0 ? void 0 : (_n_community_toLowerCase = _n_community.toLowerCase) === null || _n_community_toLowerCase === void 0 ? void 0 : _n_community_toLowerCase.call(_n_community).trim();\n        }).filter(Boolean)));\n        const presets = [\n            \"brainrot\",\n            \"thirsttrap\",\n            \"lifestyle\"\n        ];\n        const merged = Array.from(new Set([\n            ...uniqueFromNews,\n            ...presets\n        ]));\n        setAvailableCommunities(merged);\n    }, [\n        news\n    ]);\n    // ===== UX helpers\n    const showSucces = function() {\n        let duration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1500;\n        setSucces(true);\n        setTimeout(()=>setSucces(false), duration);\n    };\n    // ----- Tag input handlers\n    const handleKeyDown = (e)=>{\n        if (e.key === \" \" || e.keyCode === 32 || e.keyCode === 0 || e.key === \"Enter\") {\n            e.preventDefault();\n            if (currentWord.trim()) {\n                setWords((prev)=>[\n                        ...prev,\n                        currentWord.trim()\n                    ]);\n                setCurrentWord(\"\");\n            }\n        }\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        if (value.endsWith(\" \") || value.endsWith(\"\\n\")) {\n            if (currentWord.trim()) {\n                setWords((prev)=>[\n                        ...prev,\n                        currentWord.trim()\n                    ]);\n                setCurrentWord(\"\");\n            }\n        } else {\n            setCurrentWord(value);\n        }\n    };\n    const handleRemoveWord = (index)=>{\n        setWords((prev)=>prev.filter((_, i)=>i !== index));\n    };\n    const joinWithComma = (arr)=>arr.join(\", \");\n    // ----- Classification handlers\n    const handleClassKeyDown = (e)=>{\n        if (e.key === \" \" || e.keyCode === 32 || e.keyCode === 0 || e.key === \"Enter\") {\n            e.preventDefault();\n            if (currentClass.trim()) {\n                setClasses((prev)=>[\n                        ...prev,\n                        currentClass.trim()\n                    ]);\n                setCurrentClass(\"\");\n            }\n        }\n    };\n    const handleClassInputChange = (e)=>{\n        const value = e.target.value;\n        if (value.endsWith(\" \") || value.endsWith(\"\\n\")) {\n            if (currentClass.trim()) {\n                setClasses((prev)=>[\n                        ...prev,\n                        currentClass.trim()\n                    ]);\n                setCurrentClass(\"\");\n            }\n        } else {\n            setCurrentClass(value);\n        }\n    };\n    const handleRemoveClass = (index)=>{\n        setClasses((prev)=>prev.filter((_, i)=>i !== index));\n    };\n    const clearRemixSelection = ()=>{\n        setSelectedImages([]);\n        setGeneratedImage(null); // AI remix preview\n        setCollagedImage(null); // collage preview\n        setSelectedParentIDs([]);\n        setRemixedPrompt(\"\");\n        setImage(null); // you set this during remix/collage previews\n        setRemixLoading(false);\n        setError(\"\"); // optional: clear any stale error\n    };\n    // put with your other handlers\n    const clearForm = ()=>{\n        // text & prompt bits\n        setText(\"\");\n        if (textArea.current) textArea.current.value = \"\";\n        // tags & classes\n        setWords([]);\n        setCurrentWord(\"\");\n        setClasses([]);\n        setCurrentClass(\"\");\n        // community\n        setCommunity(\"\");\n        // previews & gen\n        setImage(null);\n        setGeneratedImage(null);\n        // misc ui\n        setError(\"\");\n        setSucces(false);\n        setLoading(false);\n        setUploadLoading(false);\n    };\n    // ===== Generation inside Upload (prompt-based)\n    const generateImage = async ()=>{\n        var _textArea_current;\n        setLoading(true);\n        var _textArea_current_value;\n        const promptText = (_textArea_current_value = (_textArea_current = textArea.current) === null || _textArea_current === void 0 ? void 0 : _textArea_current.value) !== null && _textArea_current_value !== void 0 ? _textArea_current_value : \"\";\n        if (promptText !== \"\" || words.length > 0) {\n            try {\n                const response = await fetch(\"/api/generateImage?prompt=\".concat(encodeURIComponent(promptText || \"utopias\"), \"&remixed=yes&adjectives=\").concat(encodeURIComponent(joinWithComma(words) || \"\")));\n                const data = await response.json();\n                if (!response.ok) throw new Error(data.error || \"Generation failed\");\n                setImage(null);\n                setGeneratedImage(data.imageUrl);\n                setRemixedPrompt(data.remixedPrompt);\n                setText(data.prompt);\n            } catch (e) {\n                setError(\"that didnt work\");\n            } finally{\n                setLoading(false);\n            }\n        } else {\n            setError(\"Alchymist, you need to describe your utopia fragment\");\n            setLoading(false);\n        }\n    };\n    // ===== Remix flows (moved here)\n    const onToggleSelection = (image)=>{\n        setSelectedImages((prev)=>prev.some((img)=>img.url === image.url) ? prev.filter((img)=>img.url !== image.url) : [\n                ...prev,\n                image\n            ]);\n    };\n    const generateRemixImage = async ()=>{\n        setRemixLoading(true);\n        setCollagedImage(null);\n        if (selectedImages.length > 1) {\n            try {\n                const descriptions = [];\n                const tags = [];\n                const ids = [];\n                const styles = [];\n                const communities = [];\n                const trends = [];\n                const people = [];\n                const objects = [];\n                for (const el of selectedImages){\n                    console.log(\"selected IMAGE:\", el);\n                    descriptions.push(el.description);\n                    ids.push(el.url);\n                    (el.tags || []).forEach((t)=>tags.push(t));\n                    if (el.aiStyle) styles.push(el.aiStyle);\n                // if (el.community) communities.push(el.community);\n                // if (el.aiTrend) trends.push(el.aiTrend);\n                // if (el.aiPeople) {\n                //   (el.aiPeople || []).forEach((t) => people.push(t));\n                // }\n                // if (el.aiObjects) objects.push(el.aiObjects);\n                }\n                // store the lineage\n                setSelectedParentIDs(ids);\n                // helpful de-dupe + trim\n                const uniq = (arr)=>Array.from(new Set(arr.filter(Boolean).map((s)=>s.trim())));\n                const payload = {\n                    // keep compatibility with existing server code\n                    prompt: descriptions.join(\", \") || \"utopias\",\n                    adjectives: uniq(tags).join(\", \"),\n                    // new rich context\n                    styles: uniq(styles),\n                    communities: uniq(communities),\n                    trends: uniq(trends),\n                    descriptions,\n                    parentIds: ids,\n                    people: uniq(people)\n                };\n                const response = await fetch(\"/api/generateImage\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(payload)\n                });\n                const data = await response.json();\n                console.log(data);\n                setRemixedPrompt(data.remixedPrompt || \"\");\n                setText(data.remixedPrompt || \"\");\n                if (tags.length) setWords(uniq(tags));\n                if (!response.ok) throw new Error(data.error || \"Generation failed\");\n                setGeneratedImage(data.imageUrl);\n                setImage(data.imageUrl); // if you want the uploader preview populated too\n            } catch (err) {\n                setError(\"remix generation failed\");\n            } finally{\n                setRemixLoading(false);\n            }\n        } else {\n            setRemixLoading(false);\n        }\n    };\n    const generateRemixCollage = async ()=>{\n        if (selectedImages.length < 2) return;\n        setRemixLoading(true);\n        setGeneratedImage(null);\n        try {\n            const ids = selectedImages.map((i)=>i.url);\n            setSelectedParentIDs(ids);\n            const dataUrl = await (0,_mosaic__WEBPACK_IMPORTED_MODULE_4__.mosaicBlend)(ids, {\n                size: 1024,\n                block: 32,\n                returnType: \"dataURL\",\n                seed: undefined\n            });\n            if (!text) setText(\"collage of fragments\");\n            if (words.length === 0) {\n                const tags = selectedImages.flatMap((i)=>i.tags || []);\n                setWords(tags);\n            }\n            setImage(dataUrl);\n            setCollagedImage(dataUrl);\n        } catch (e) {\n            setError(\"collage failed\");\n        } finally{\n            setRemixLoading(false);\n        }\n    };\n    // ===== Unified Upload (supports normal + remix)\n    const upLoadImage = async (_image, extras)=>{\n        try {\n            var _textArea_current;\n            setUploadLoading(true);\n            var _textArea_current_value;\n            const promptText = (_textArea_current_value = (_textArea_current = textArea.current) === null || _textArea_current === void 0 ? void 0 : _textArea_current.value) !== null && _textArea_current_value !== void 0 ? _textArea_current_value : \"\";\n            if (_image != null) {\n                var _extras_tagsOverride;\n                const response = await fetch(\"/api/cloudinary/upload\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        imageUrl: _image,\n                        title: promptText || \"_\",\n                        tags: joinWithComma((_extras_tagsOverride = extras === null || extras === void 0 ? void 0 : extras.tagsOverride) !== null && _extras_tagsOverride !== void 0 ? _extras_tagsOverride : words),\n                        classes: joinWithComma(classes),\n                        community,\n                        parentIds: extras === null || extras === void 0 ? void 0 : extras.parentIds,\n                        remixedPrompt: extras === null || extras === void 0 ? void 0 : extras.remixedPrompt\n                    })\n                });\n                const data = await response.json();\n                if (!response.ok) {\n                    setError(\"this image is bad\");\n                    throw new Error(data.error || \"Upload failed\");\n                } else {\n                    const card = {\n                        title: data.title,\n                        url: data.url,\n                        tags: data.tags,\n                        aiCaption: data.caption,\n                        description: data.alt || \"Untitled\",\n                        aiTitle: data.ai_title,\n                        aiVibe: data.ai_vibe,\n                        aiObjects: data.ai_objects,\n                        aiFeeling: data.ai_feeling,\n                        id: data.id,\n                        community: data.community,\n                        parentIds: data.parentIds,\n                        ai_so_me_type: data.aiSoMeType,\n                        aiStyle: data.aiStyle,\n                        aiTrend: data.aiTrend,\n                        aiPeople: data.aiPeople\n                    };\n                    shareImageToSocket(card);\n                    poorImageIntoCouldron(card);\n                }\n            } else {\n                setError(\"Alchymist, you need to invent a scene\");\n            }\n        } catch (e) {\n            setError(\"image is bad\");\n        } finally{\n            // reset UI\n            setLoading(false);\n            setUploadLoading(false);\n            setShowUpload(false);\n            setImage(null);\n            setText(\"\");\n            setCommunity(\"\");\n            setClasses([]);\n            setWords([]);\n            setGeneratedImage(null);\n            setCollagedImage(null);\n            setSelectedParentIDs([]);\n            setSelectedImages([]);\n            setShowRemixer(false);\n        }\n    };\n    // ===== File & socket helpers\n    const handleImageChange = (e)=>{\n        var _e_target_files;\n        const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = ()=>setImage(reader.result);\n            reader.readAsDataURL(file);\n        }\n    };\n    const shareImageToSocket = (_image)=>{\n        var _socketRef_current;\n        (_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.emit(\"hello\", _image);\n    };\n    const poorImageIntoCouldron = (_image)=>{\n        setNews((prev)=>[\n                _image,\n                ...prev\n            ]);\n        showSucces();\n        setImage(null);\n        setGeneratedImage(null);\n        setShowGallery(false);\n        setLoading(false);\n        setUploadLoading(false);\n        setShowUpload(false);\n        setText(\"\");\n        setWords([]);\n        setGeneratedImage(null);\n    };\n    // ===== Submit\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setLoading(true);\n        if (image) {\n            await upLoadImage(image);\n        } else if (generatedImage) {\n            await upLoadImage(generatedImage);\n        } else {\n            setLoading(false);\n        // no image provided\n        }\n    };\n    const hasFormData = !!image || !!generatedImage || text.trim().length > 0 || words.length > 0 || classes.length > 0 || community.trim().length > 0;\n    // ===== Render\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mainContainer\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: uploading ? \"uploading uploader\" : \"uploader\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"contribute to the image ecology simulation\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 572,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                htmlFor: \"image-upload\",\n                                className: !loading ? \"imgUploadBtn active super-default\" : \"imgUploadBtn passive super-default\",\n                                children: image ? \"upload another image\" : \"upload new image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 575,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                id: \"image-upload\",\n                                type: \"file\",\n                                accept: \"image/*\",\n                                onChange: handleImageChange,\n                                className: \"sr-only\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 585,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 574,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"imageResultContainer\",\n                        children: [\n                            \" \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"imageResult\",\n                                children: [\n                                    image ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"closebtn\",\n                                                type: \"button\",\n                                                onClick: ()=>setImage(null),\n                                                children: \"X\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                                lineNumber: 599,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                src: image,\n                                                alt: \"Preview\",\n                                                className: \"subImage\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                                lineNumber: 606,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true) : null,\n                                    uploading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"loaderAnim\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 609,\n                                        columnNumber: 26\n                                    }, this) : null\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 596,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 594,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image description\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 614,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                ref: textArea,\n                                id: \"text\",\n                                value: text,\n                                autoCorrect: \"false\",\n                                onChange: (e)=>setText(e.target.value),\n                                placeholder: \"describe the image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 615,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 613,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"wordinputs error\" : \"wordinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image tagging\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 626,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: currentWord,\n                                autoCorrect: \"false\",\n                                onChange: handleInputChange,\n                                onKeyDown: handleKeyDown,\n                                className: \"mt-2 p-2 border rounded-md\",\n                                placeholder: \"optional: tag the image\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 627,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: words.map((word, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"button\",\n                                        onClick: ()=>handleRemoveWord(index),\n                                        className: \"adjBtn\",\n                                        children: [\n                                            word,\n                                            \" ✖\"\n                                        ]\n                                    }, \"\".concat(word, \"-\").concat(index), true, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 638,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 636,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 625,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"image classification\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 651,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: currentClass,\n                                autoCorrect: \"false\",\n                                onChange: handleClassInputChange,\n                                onKeyDown: handleClassKeyDown,\n                                className: \"mt-2 p-2 border rounded-md\",\n                                placeholder: \"optional: image population/type\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 652,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: classes.map((cls, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleRemoveClass(index),\n                                        className: \"adjBtn\",\n                                        type: \"button\",\n                                        children: [\n                                            cls,\n                                            \" ✖\"\n                                        ]\n                                    }, \"\".concat(cls, \"-\").concat(index), true, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 663,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 661,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 650,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: error ? \"textinputs error\" : \"textinputs\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"community\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 676,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-row-wrap adjButtons\",\n                                children: availableCommunities.map((comm)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"button\",\n                                        onClick: ()=>setCommunity(comm),\n                                        className: \"adjBtn \".concat(community === comm ? \"active\" : \"\"),\n                                        children: comm\n                                    }, comm, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 679,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 677,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                value: community,\n                                onChange: (e)=>setCommunity(e.target.value.toLowerCase()),\n                                placeholder: \"or write your own community\",\n                                className: \"mt-2 p-2 border rounded-md\",\n                                autoCorrect: \"false\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 689,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 675,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: !hasFormData ? \"uploaderButtons right\" : \"uploaderButtons between\",\n                        children: [\n                            hasFormData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                type: \"button\",\n                                className: \"super-default\",\n                                onClick: clearForm,\n                                children: \"clear form\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 705,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                type: \"submit\",\n                                className: loading ? \"passive super-default\" : generatedImage ? \"active super-default\" : image ? \"active super-default\" : \"passive super-default\",\n                                children: loading ? \"loading content\" : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: \"upload\"\n                                }, void 0, false)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 709,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 699,\n                        columnNumber: 9\n                    }, this),\n                    succes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"succes\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: \"upload complete\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 737,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 736,\n                        columnNumber: 11\n                    }, this),\n                    error && error !== \"\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"succes error\",\n                        onClick: ()=>{\n                            setError(\"\");\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 747,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 741,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 568,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"gallery\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Gallery__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        news: news,\n                        communityCategories: availableCommunities,\n                        selectedImages: selectedImages,\n                        onToggleSelection: onToggleSelection,\n                        onOpenRemixer: ()=>{\n                            setShowRemixer(true);\n                            snapToPane(\"remixer\"); // scrolls to the right pane on mobile\n                        }\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 754,\n                        columnNumber: 9\n                    }, this),\n                    !isFetchingRecent && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            marginTop: 16\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            className: \"adjBtn\",\n                            onClick: ()=>fetchRecentImages(),\n                            children: \"load more\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 766,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 765,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 753,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"aside\", {\n                className: 'remixer open\"}',\n                ref: remixerRef,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"remix images from the ecology simulation\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 779,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons galleryUploaderButtons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                disabled: remixLoading,\n                                className: !remixLoading ? \"active super-default\" : \"passive super-default\",\n                                onClick: (e)=>{\n                                    e.preventDefault();\n                                    generateRemixImage();\n                                },\n                                children: generatedImage ? \"recreate AI remix\" : \"AI remix\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 782,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                disabled: remixLoading,\n                                className: !remixLoading ? \"active super-default\" : \"passive super-default\",\n                                onClick: (e)=>{\n                                    e.preventDefault();\n                                    generateRemixCollage();\n                                },\n                                children: collagedImage ? \"reblend collage\" : \"collage\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 795,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 781,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"imageResultContainer\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"imageResult\",\n                            children: remixLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"loaderAnim\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 834,\n                                columnNumber: 15\n                            }, this) : generatedImage ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: generatedImage,\n                                alt: \"Generated\",\n                                className: \"w-full rounded-lg\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 836,\n                                columnNumber: 15\n                            }, this) : collagedImage ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: collagedImage,\n                                alt: \"Generated\",\n                                className: \"w-full rounded-lg\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                lineNumber: 842,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \" remixSelection\",\n                                        style: {\n                                            [\"--cols\"]: Math.max(1, Math.ceil(Math.sqrt(selectedImages.length))),\n                                            [\"--rows\"]: Math.max(1, Math.ceil(selectedImages.length / Math.max(1, Math.ceil(Math.sqrt(selectedImages.length))))),\n                                            [\"--gap\"]: \"8px\",\n                                            [\"--radius\"]: \"8px\"\n                                        },\n                                        children: selectedImages.map((img, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                src: img.url\n                                            }, index, false, {\n                                                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                                lineNumber: 873,\n                                                columnNumber: 21\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 849,\n                                        columnNumber: 17\n                                    }, this),\n                                    selectedImages.length < 2 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"imageNotice\",\n                                        children: \"u need at least 2 images from the db\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                                        lineNumber: 878,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 832,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 831,\n                        columnNumber: 9\n                    }, this),\n                    selectedImages.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"uploaderButtons right\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            onClick: clearRemixSelection,\n                            className: \"super-default\",\n                            children: \"clear remix\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                            lineNumber: 888,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                        lineNumber: 887,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n                lineNumber: 778,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\components\\\\Upload.tsx\",\n        lineNumber: 567,\n        columnNumber: 5\n    }, this);\n}\n_s(Upload, \"LnIok3g26eC5CBFKKQEYVW7eJ0g=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1VwbG9hZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGFBQWE7OztBQUc4QztBQUMzQjtBQUVjO0FBQ1AsQ0FBQyx3QkFBd0I7QUFFekQsU0FBU087O0lBQ2QsY0FBYztJQUNkLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHTiwrQ0FBUUEsQ0FBZ0I7SUFDbEQsTUFBTSxDQUFDTyxNQUFNQyxRQUFRLEdBQUdSLCtDQUFRQSxDQUFDO0lBQ2pDLE1BQU1TLFdBQVdWLDZDQUFNQSxDQUFzQjtJQUU3QyxNQUFNLENBQUNXLFNBQVNDLFdBQVcsR0FBR1gsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDWSxXQUFXQyxpQkFBaUIsR0FBR2IsK0NBQVFBLENBQUM7SUFDL0MsTUFBTSxDQUFDYyxZQUFZQyxjQUFjLEdBQUdmLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQ2dCLGFBQWFDLGVBQWUsR0FBR2pCLCtDQUFRQSxDQUFDO0lBRS9DLDBEQUEwRDtJQUMxRCxNQUFNLENBQUNrQixnQkFBZ0JDLGtCQUFrQixHQUFHbkIsK0NBQVFBLENBQWdCO0lBQ3BFLE1BQU0sQ0FBQ29CLGVBQWVDLGlCQUFpQixHQUFHckIsK0NBQVFBLENBQUM7SUFFbkQsT0FBTztJQUNQLE1BQU0sQ0FBQ3NCLE9BQU9DLFNBQVMsR0FBR3ZCLCtDQUFRQSxDQUFXLEVBQUU7SUFDL0MsTUFBTSxDQUFDd0IsYUFBYUMsZUFBZSxHQUFHekIsK0NBQVFBLENBQVM7SUFFdkQsaUJBQWlCO0lBQ2pCLE1BQU0sQ0FBQzBCLFNBQVNDLFdBQVcsR0FBRzNCLCtDQUFRQSxDQUFXLEVBQUU7SUFDbkQsTUFBTSxDQUFDNEIsY0FBY0MsZ0JBQWdCLEdBQUc3QiwrQ0FBUUEsQ0FBUztJQUV6RCxjQUFjO0lBQ2QsTUFBTSxDQUFDOEIsV0FBV0MsYUFBYSxHQUFHL0IsK0NBQVFBLENBQVM7SUFDbkQsTUFBTSxDQUFDZ0Msc0JBQXNCQyx3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RTs0Q0FDbEIsQ0FBQyxXQUFrQixFQUFFO3dDQUN2QjtrREFHRDlELGVBQWVnRSxHQUFHLENBQUMsQ0FBQ3FFLEtBQUtuQixzQkFDeEIsOERBQUNtQjtnREFBSTRELEtBQUs1RCxJQUFJbEUsR0FBRzsrQ0FBTytDOzs7Ozs7Ozs7O29DQUkzQmxILGVBQWU4RCxNQUFNLEdBQUcsbUJBQ3ZCLDhEQUFDMEg7d0NBQUVILFdBQVU7a0RBQWM7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFRcENyTCxlQUFlOEQsTUFBTSxHQUFHLG1CQUN2Qiw4REFBQ3NIO3dCQUFJQyxXQUFVO2tDQUNiLDRFQUFDVTs0QkFDQ0gsTUFBSzs0QkFDTEksU0FBU3JFOzRCQUNUMEQsV0FBVTtzQ0FDWDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRYjtHQTEzQmdCN047S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvVXBsb2FkLnRzeD8zM2I0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFVwbG9hZC50c3hcblwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgR2FsbGVyeSBmcm9tIFwiLi9HYWxsZXJ5XCI7XG5pbXBvcnQgdHlwZSB7IEltYWdlQ2FyZFByb3BzIH0gZnJvbSBcIi4vaW1hZ2VDYXJkUHJvcHNcIjtcbmltcG9ydCB7IGlvLCBTb2NrZXQgfSBmcm9tIFwic29ja2V0LmlvLWNsaWVudFwiO1xuaW1wb3J0IHsgbW9zYWljQmxlbmQgfSBmcm9tIFwiLi9tb3NhaWNcIjsgLy8gYWRqdXN0IHBhdGggaWYgbmVlZGVkXG5cbmV4cG9ydCBmdW5jdGlvbiBVcGxvYWQoKSB7XG4gIC8vID09PT09IFN0YXRlXG4gIGNvbnN0IFtpbWFnZSwgc2V0SW1hZ2VdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCB0ZXh0QXJlYSA9IHVzZVJlZjxIVE1MVGV4dEFyZWFFbGVtZW50PihudWxsKTtcblxuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt1cGxvYWRpbmcsIHNldFVwbG9hZExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd1VwbG9hZCwgc2V0U2hvd1VwbG9hZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93R2FsbGVyeSwgc2V0U2hvd0dhbGxlcnldID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIEZvciBwcm9tcHQtYmFzZWQgZ2VuZXJhdGlvbiB3aXRoaW4gdXBsb2FkZXIgKHVuY2hhbmdlZClcbiAgY29uc3QgW2dlbmVyYXRlZEltYWdlLCBzZXRHZW5lcmF0ZWRJbWFnZV0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3JlbWl4ZWRQcm9tcHQsIHNldFJlbWl4ZWRQcm9tcHRdID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgLy8gdGFnc1xuICBjb25zdCBbd29yZHMsIHNldFdvcmRzXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG4gIGNvbnN0IFtjdXJyZW50V29yZCwgc2V0Q3VycmVudFdvcmRdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcblxuICAvLyBjbGFzc2lmaWNhdGlvblxuICBjb25zdCBbY2xhc3Nlcywgc2V0Q2xhc3Nlc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xuICBjb25zdCBbY3VycmVudENsYXNzLCBzZXRDdXJyZW50Q2xhc3NdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcblxuICAvLyBjb21tdW5pdGllc1xuICBjb25zdCBbY29tbXVuaXR5LCBzZXRDb21tdW5pdHldID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcbiAgY29uc3QgW2F2YWlsYWJsZUNvbW11bml0aWVzLCBzZXRBdmFpbGFibGVDb21tdW5pdGllc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oXG4gICAgW11cbiAgKTtcblxuICAvLyBkYXRhICsgcGFnaW5hdGlvblxuICBjb25zdCBbbmV3cywgc2V0TmV3c10gPSB1c2VTdGF0ZTxJbWFnZUNhcmRQcm9wc1tdPihbXSk7XG4gIGNvbnN0IFtsb2FkSW5kZXgsIHNldExvYWRJbmRleF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbaXNGZXRjaGluZ1JlY2VudCwgc2V0SXNGZXRjaGluZ1JlY2VudF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgLy8gbWlzY1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZz4oXCJcIik7XG4gIGNvbnN0IFtzdWNjZXMsIHNldFN1Y2Nlc10gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgLy8gPT09PT0gUmVtaXggVUkgKG1vdmVkIGhlcmUgZnJvbSBHYWxsZXJ5KVxuICBjb25zdCBbc2VsZWN0ZWRJbWFnZXMsIHNldFNlbGVjdGVkSW1hZ2VzXSA9IHVzZVN0YXRlPEltYWdlQ2FyZFByb3BzW10+KFtdKTtcbiAgY29uc3QgW3Nob3dSZW1peGVyLCBzZXRTaG93UmVtaXhlcl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjb2xsYWdlZEltYWdlLCBzZXRDb2xsYWdlZEltYWdlXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbcmVtaXhMb2FkaW5nLCBzZXRSZW1peExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2VsZWN0ZWRQYXJlbnRJZHMsIHNldFNlbGVjdGVkUGFyZW50SURzXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG5cbiAgLy8gPT09PT0gUmVmcyB0byBoYW5kbGUgZGV2IHN0cmljdC1tb2RlICsgcmUtZW50cmFuY3lcbiAgY29uc3QgZGlkTG9hZFJlZiA9IHVzZVJlZihmYWxzZSk7XG4gIGNvbnN0IGluRmxpZ2h0UmVmID0gdXNlUmVmKGZhbHNlKTtcblxuICBjb25zdCBjb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgcmVtaXhlclJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudCB8IG51bGw+KG51bGwpO1xuXG4gIGNvbnN0IHNuYXBUb1BhbmUgPSAocGFuZTogXCJ1cGxvYWRlclwiIHwgXCJnYWxsZXJ5XCIgfCBcInJlbWl4ZXJcIikgPT4ge1xuICAgIGNvbnN0IGVsID1cbiAgICAgIHBhbmUgPT09IFwicmVtaXhlclwiXG4gICAgICAgID8gcmVtaXhlclJlZi5jdXJyZW50XG4gICAgICAgIDogcGFuZSA9PT0gXCJnYWxsZXJ5XCJcbiAgICAgICAgPyAoY29udGFpbmVyUmVmLmN1cnJlbnQ/LmNoaWxkcmVuWzFdIGFzIEhUTUxFbGVtZW50KVxuICAgICAgICA6IChjb250YWluZXJSZWYuY3VycmVudD8uY2hpbGRyZW5bMF0gYXMgSFRNTEVsZW1lbnQpO1xuXG4gICAgaWYgKCFlbCB8fCAhY29udGFpbmVyUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIC8vIE9ubHkgZG8gdGhlIGhvcml6b250YWwgc2Nyb2xsIGJlaGF2aW9yIG9uIHNtYWxsIHNjcmVlbnNcbiAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEoXCIobWF4LXdpZHRoOiA3NjhweClcIikubWF0Y2hlcykge1xuICAgICAgY29udGFpbmVyUmVmLmN1cnJlbnQuc2Nyb2xsVG8oe1xuICAgICAgICBsZWZ0OiBlbC5vZmZzZXRMZWZ0LFxuICAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIixcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICAvLyA9PT09PSBTb2NrZXRcbiAgY29uc3Qgc29ja2V0UmVmID0gdXNlUmVmPFNvY2tldCB8IG51bGw+KG51bGwpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBzdG9yZWRVc2VySWQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwidXNlcklkXCIpO1xuICAgIGlmICghc3RvcmVkVXNlcklkKSB7XG4gICAgICBzdG9yZWRVc2VySWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwidXNlcklkXCIsIHN0b3JlZFVzZXJJZCk7XG4gICAgfVxuXG4gICAgY29uc3QgcyA9IGlvKFwiaHR0cHM6Ly9kYW5jaW5nd2FpLTExZjExNWI2ODFlMi5oZXJva3VhcHAuY29tXCIsIHtcbiAgICAgIGF1dG9Db25uZWN0OiBmYWxzZSxcbiAgICB9KTtcbiAgICBzb2NrZXRSZWYuY3VycmVudCA9IHM7XG4gICAgcy5jb25uZWN0KCk7XG5cbiAgICBjb25zdCBvblJlY2VpdmUgPSAobWVzc2FnZTogYW55KSA9PiBjb25zb2xlLmxvZyhcImdldHMgaW8gbWVzc2FnZVwiLCBtZXNzYWdlKTtcbiAgICBjb25zdCBvbkNvbm5lY3QgPSAoKSA9PiBjb25zb2xlLmxvZyhcImNvbm5lY3RzXCIpO1xuICAgIGNvbnN0IG9uSGVsbG8gPSAobXNnOiBhbnkpID0+IGNvbnNvbGUubG9nKFwiaGVsbG9cIiwgbXNnKTtcblxuICAgIHMub24oXCJyZWNlaXZlTWVzc2FnZVwiLCBvblJlY2VpdmUpO1xuICAgIHMub24oXCJjb25uZWN0XCIsIG9uQ29ubmVjdCk7XG4gICAgcy5vbihcImhlbGxvXCIsIG9uSGVsbG8pO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHMub2ZmKFwicmVjZWl2ZU1lc3NhZ2VcIiwgb25SZWNlaXZlKTtcbiAgICAgIHMub2ZmKFwiY29ubmVjdFwiLCBvbkNvbm5lY3QpO1xuICAgICAgcy5vZmYoXCJoZWxsb1wiLCBvbkhlbGxvKTtcbiAgICAgIHMuZGlzY29ubmVjdCgpO1xuICAgICAgc29ja2V0UmVmLmN1cnJlbnQgPSBudWxsO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICAvLyA9PT09PSBJbml0aWFsIGxvYWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoZGlkTG9hZFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgZGlkTG9hZFJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICB2b2lkIGZldGNoUmVjZW50SW1hZ2VzKCk7XG4gIH0sIFtdKTtcblxuICAvLyA9PT09PSBGZXRjaCBpbWFnZXNcbiAgY29uc3QgZmV0Y2hSZWNlbnRJbWFnZXMgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKGluRmxpZ2h0UmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBpbkZsaWdodFJlZi5jdXJyZW50ID0gdHJ1ZTtcblxuICAgIGNvbnN0IGFjID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIHNldElzRmV0Y2hpbmdSZWNlbnQodHJ1ZSk7XG4gICAgc2V0RXJyb3IoXCJcIik7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIGAvYXBpL2Nsb3VkaW5hcnkvcmVjZW50P3NraXA9JHtsb2FkSW5kZXh9JmxpbWl0PTEwYCxcbiAgICAgICAgeyBzaWduYWw6IGFjLnNpZ25hbCwgY2FjaGU6IFwibm8tc3RvcmVcIiB9XG4gICAgICApO1xuICAgICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihgSFRUUCAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkgJiYgZGF0YS5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgbWFwcGVkOiBJbWFnZUNhcmRQcm9wc1tdID0gZGF0YS5tYXAoKGQ6IGFueSkgPT4gKHtcbiAgICAgICAgICB0aXRsZTogZC50aXRsZSxcbiAgICAgICAgICB1cmw6IGQudXJsLFxuICAgICAgICAgIHRhZ3M6IGQudGFncyxcbiAgICAgICAgICBhaUNhcHRpb246IGQuY2FwdGlvbixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogZC5hbHQgfHwgXCJVbnRpdGxlZFwiLFxuICAgICAgICAgIGFpVGl0bGU6IGQuYWlfdGl0bGUsXG4gICAgICAgICAgYWlWaWJlOiBkLmFpX3ZpYmUsXG4gICAgICAgICAgYWlPYmplY3RzOiBkLmFpX29iamVjdHMsXG4gICAgICAgICAgYWlGZWVsaW5nOiBkLmFpX2ZlZWxpbmcsXG4gICAgICAgICAgaWQ6IGQuaWQsXG4gICAgICAgICAgY29tbXVuaXR5OiBkLmNvbW11bml0eSxcbiAgICAgICAgICBwYXJlbnRJZHM6IGQucGFyZW50SWRzLFxuICAgICAgICAgIGFpX3NvX21lX3R5cGU6IGQuYWlTb01lVHlwZSxcbiAgICAgICAgICBhaVN0eWxlOiBkLmFpU3R5bGUsXG4gICAgICAgICAgYWlUcmVuZDogZC5haVRyZW5kLFxuICAgICAgICAgIGFpUGVvcGxlOiBkLmFpUGVvcGxlLFxuICAgICAgICB9KSk7XG5cbiAgICAgICAgc2V0TmV3cygocHJldikgPT4gWy4uLnByZXYsIC4uLm1hcHBlZF0pO1xuICAgICAgICBzZXRMb2FkSW5kZXgoKHByZXYpID0+IHByZXYgKyAxMCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZTogYW55KSB7XG4gICAgICBpZiAoZT8ubmFtZSAhPT0gXCJBYm9ydEVycm9yXCIpIHtcbiAgICAgICAgc2V0RXJyb3IoXG4gICAgICAgICAgZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogXCJGYWlsZWQgdG8gZmV0Y2ggcmVjZW50IGltYWdlc1wiXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzRmV0Y2hpbmdSZWNlbnQoZmFsc2UpO1xuICAgICAgaW5GbGlnaHRSZWYuY3VycmVudCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiBhYy5hYm9ydCgpO1xuICB9O1xuXG4gIC8vID09PT09IERlcml2ZSBhdmFpbGFibGUgY29tbXVuaXRpZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB1bmlxdWVGcm9tTmV3cyA9IEFycmF5LmZyb20oXG4gICAgICBuZXcgU2V0KFxuICAgICAgICBuZXdzXG4gICAgICAgICAgLm1hcCgobikgPT4gbi5jb21tdW5pdHk/LnRvTG93ZXJDYXNlPy4oKS50cmltKCkpXG4gICAgICAgICAgLmZpbHRlcihCb29sZWFuKSBhcyBzdHJpbmdbXVxuICAgICAgKVxuICAgICk7XG4gICAgY29uc3QgcHJlc2V0cyA9IFtcImJyYWlucm90XCIsIFwidGhpcnN0dHJhcFwiLCBcImxpZmVzdHlsZVwiXTtcbiAgICBjb25zdCBtZXJnZWQgPSBBcnJheS5mcm9tKG5ldyBTZXQoWy4uLnVuaXF1ZUZyb21OZXdzLCAuLi5wcmVzZXRzXSkpO1xuICAgIHNldEF2YWlsYWJsZUNvbW11bml0aWVzKG1lcmdlZCk7XG4gIH0sIFtuZXdzXSk7XG5cbiAgLy8gPT09PT0gVVggaGVscGVyc1xuICBjb25zdCBzaG93U3VjY2VzID0gKGR1cmF0aW9uID0gMTUwMCkgPT4ge1xuICAgIHNldFN1Y2Nlcyh0cnVlKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHNldFN1Y2NlcyhmYWxzZSksIGR1cmF0aW9uKTtcbiAgfTtcblxuICAvLyAtLS0tLSBUYWcgaW5wdXQgaGFuZGxlcnNcbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgaWYgKFxuICAgICAgZS5rZXkgPT09IFwiIFwiIHx8XG4gICAgICBlLmtleUNvZGUgPT09IDMyIHx8XG4gICAgICBlLmtleUNvZGUgPT09IDAgfHxcbiAgICAgIGUua2V5ID09PSBcIkVudGVyXCJcbiAgICApIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChjdXJyZW50V29yZC50cmltKCkpIHtcbiAgICAgICAgc2V0V29yZHMoKHByZXYpID0+IFsuLi5wcmV2LCBjdXJyZW50V29yZC50cmltKCldKTtcbiAgICAgICAgc2V0Q3VycmVudFdvcmQoXCJcIik7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBjb25zdCBoYW5kbGVJbnB1dENoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgaWYgKHZhbHVlLmVuZHNXaXRoKFwiIFwiKSB8fCB2YWx1ZS5lbmRzV2l0aChcIlxcblwiKSkge1xuICAgICAgaWYgKGN1cnJlbnRXb3JkLnRyaW0oKSkge1xuICAgICAgICBzZXRXb3JkcygocHJldikgPT4gWy4uLnByZXYsIGN1cnJlbnRXb3JkLnRyaW0oKV0pO1xuICAgICAgICBzZXRDdXJyZW50V29yZChcIlwiKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0Q3VycmVudFdvcmQodmFsdWUpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgaGFuZGxlUmVtb3ZlV29yZCA9IChpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgc2V0V29yZHMoKHByZXYpID0+IHByZXYuZmlsdGVyKChfLCBpKSA9PiBpICE9PSBpbmRleCkpO1xuICB9O1xuICBjb25zdCBqb2luV2l0aENvbW1hID0gKGFycjogc3RyaW5nW10pID0+IGFyci5qb2luKFwiLCBcIik7XG5cbiAgLy8gLS0tLS0gQ2xhc3NpZmljYXRpb24gaGFuZGxlcnNcbiAgY29uc3QgaGFuZGxlQ2xhc3NLZXlEb3duID0gKGU6IFJlYWN0LktleWJvYXJkRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBpZiAoXG4gICAgICBlLmtleSA9PT0gXCIgXCIgfHxcbiAgICAgIGUua2V5Q29kZSA9PT0gMzIgfHxcbiAgICAgIGUua2V5Q29kZSA9PT0gMCB8fFxuICAgICAgZS5rZXkgPT09IFwiRW50ZXJcIlxuICAgICkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKGN1cnJlbnRDbGFzcy50cmltKCkpIHtcbiAgICAgICAgc2V0Q2xhc3NlcygocHJldikgPT4gWy4uLnByZXYsIGN1cnJlbnRDbGFzcy50cmltKCldKTtcbiAgICAgICAgc2V0Q3VycmVudENsYXNzKFwiXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgY29uc3QgaGFuZGxlQ2xhc3NJbnB1dENoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgaWYgKHZhbHVlLmVuZHNXaXRoKFwiIFwiKSB8fCB2YWx1ZS5lbmRzV2l0aChcIlxcblwiKSkge1xuICAgICAgaWYgKGN1cnJlbnRDbGFzcy50cmltKCkpIHtcbiAgICAgICAgc2V0Q2xhc3NlcygocHJldikgPT4gWy4uLnByZXYsIGN1cnJlbnRDbGFzcy50cmltKCldKTtcbiAgICAgICAgc2V0Q3VycmVudENsYXNzKFwiXCIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRDdXJyZW50Q2xhc3ModmFsdWUpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgaGFuZGxlUmVtb3ZlQ2xhc3MgPSAoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIHNldENsYXNzZXMoKHByZXYpID0+IHByZXYuZmlsdGVyKChfLCBpKSA9PiBpICE9PSBpbmRleCkpO1xuICB9O1xuXG4gIGNvbnN0IGNsZWFyUmVtaXhTZWxlY3Rpb24gPSAoKSA9PiB7XG4gICAgc2V0U2VsZWN0ZWRJbWFnZXMoW10pO1xuICAgIHNldEdlbmVyYXRlZEltYWdlKG51bGwpOyAvLyBBSSByZW1peCBwcmV2aWV3XG4gICAgc2V0Q29sbGFnZWRJbWFnZShudWxsKTsgLy8gY29sbGFnZSBwcmV2aWV3XG4gICAgc2V0U2VsZWN0ZWRQYXJlbnRJRHMoW10pO1xuICAgIHNldFJlbWl4ZWRQcm9tcHQoXCJcIik7XG4gICAgc2V0SW1hZ2UobnVsbCk7IC8vIHlvdSBzZXQgdGhpcyBkdXJpbmcgcmVtaXgvY29sbGFnZSBwcmV2aWV3c1xuICAgIHNldFJlbWl4TG9hZGluZyhmYWxzZSk7XG4gICAgc2V0RXJyb3IoXCJcIik7IC8vIG9wdGlvbmFsOiBjbGVhciBhbnkgc3RhbGUgZXJyb3JcbiAgfTtcbiAgLy8gcHV0IHdpdGggeW91ciBvdGhlciBoYW5kbGVyc1xuICBjb25zdCBjbGVhckZvcm0gPSAoKSA9PiB7XG4gICAgLy8gdGV4dCAmIHByb21wdCBiaXRzXG4gICAgc2V0VGV4dChcIlwiKTtcbiAgICBpZiAodGV4dEFyZWEuY3VycmVudCkgdGV4dEFyZWEuY3VycmVudC52YWx1ZSA9IFwiXCI7XG5cbiAgICAvLyB0YWdzICYgY2xhc3Nlc1xuICAgIHNldFdvcmRzKFtdKTtcbiAgICBzZXRDdXJyZW50V29yZChcIlwiKTtcbiAgICBzZXRDbGFzc2VzKFtdKTtcbiAgICBzZXRDdXJyZW50Q2xhc3MoXCJcIik7XG5cbiAgICAvLyBjb21tdW5pdHlcbiAgICBzZXRDb21tdW5pdHkoXCJcIik7XG5cbiAgICAvLyBwcmV2aWV3cyAmIGdlblxuICAgIHNldEltYWdlKG51bGwpO1xuICAgIHNldEdlbmVyYXRlZEltYWdlKG51bGwpO1xuXG4gICAgLy8gbWlzYyB1aVxuICAgIHNldEVycm9yKFwiXCIpO1xuICAgIHNldFN1Y2NlcyhmYWxzZSk7XG4gICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgc2V0VXBsb2FkTG9hZGluZyhmYWxzZSk7XG4gIH07XG5cbiAgLy8gPT09PT0gR2VuZXJhdGlvbiBpbnNpZGUgVXBsb2FkIChwcm9tcHQtYmFzZWQpXG4gIGNvbnN0IGdlbmVyYXRlSW1hZ2UgPSBhc3luYyAoKSA9PiB7XG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBjb25zdCBwcm9tcHRUZXh0ID0gdGV4dEFyZWEuY3VycmVudD8udmFsdWUgPz8gXCJcIjtcblxuICAgIGlmIChwcm9tcHRUZXh0ICE9PSBcIlwiIHx8IHdvcmRzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgICAgYC9hcGkvZ2VuZXJhdGVJbWFnZT9wcm9tcHQ9JHtlbmNvZGVVUklDb21wb25lbnQoXG4gICAgICAgICAgICBwcm9tcHRUZXh0IHx8IFwidXRvcGlhc1wiXG4gICAgICAgICAgKX0mcmVtaXhlZD15ZXMmYWRqZWN0aXZlcz0ke2VuY29kZVVSSUNvbXBvbmVudChcbiAgICAgICAgICAgIGpvaW5XaXRoQ29tbWEod29yZHMpIHx8IFwiXCJcbiAgICAgICAgICApfWBcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoZGF0YS5lcnJvciB8fCBcIkdlbmVyYXRpb24gZmFpbGVkXCIpO1xuICAgICAgICBzZXRJbWFnZShudWxsKTtcbiAgICAgICAgc2V0R2VuZXJhdGVkSW1hZ2UoZGF0YS5pbWFnZVVybCk7XG4gICAgICAgIHNldFJlbWl4ZWRQcm9tcHQoZGF0YS5yZW1peGVkUHJvbXB0KTtcbiAgICAgICAgc2V0VGV4dChkYXRhLnByb21wdCk7XG4gICAgICB9IGNhdGNoIHtcbiAgICAgICAgc2V0RXJyb3IoXCJ0aGF0IGRpZG50IHdvcmtcIik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2V0RXJyb3IoXCJBbGNoeW1pc3QsIHlvdSBuZWVkIHRvIGRlc2NyaWJlIHlvdXIgdXRvcGlhIGZyYWdtZW50XCIpO1xuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIC8vID09PT09IFJlbWl4IGZsb3dzIChtb3ZlZCBoZXJlKVxuICBjb25zdCBvblRvZ2dsZVNlbGVjdGlvbiA9IChpbWFnZTogSW1hZ2VDYXJkUHJvcHMpID0+IHtcbiAgICBzZXRTZWxlY3RlZEltYWdlcygocHJldikgPT5cbiAgICAgIHByZXYuc29tZSgoaW1nKSA9PiBpbWcudXJsID09PSBpbWFnZS51cmwpXG4gICAgICAgID8gcHJldi5maWx0ZXIoKGltZykgPT4gaW1nLnVybCAhPT0gaW1hZ2UudXJsKVxuICAgICAgICA6IFsuLi5wcmV2LCBpbWFnZV1cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGdlbmVyYXRlUmVtaXhJbWFnZSA9IGFzeW5jICgpID0+IHtcbiAgICBzZXRSZW1peExvYWRpbmcodHJ1ZSk7XG4gICAgc2V0Q29sbGFnZWRJbWFnZShudWxsKTtcblxuICAgIGlmIChzZWxlY3RlZEltYWdlcy5sZW5ndGggPiAxKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBkZXNjcmlwdGlvbnM6IHN0cmluZ1tdID0gW107XG4gICAgICAgIGNvbnN0IHRhZ3M6IHN0cmluZ1tdID0gW107XG4gICAgICAgIGNvbnN0IGlkczogc3RyaW5nW10gPSBbXTtcbiAgICAgICAgY29uc3Qgc3R5bGVzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBjb25zdCBjb21tdW5pdGllczogc3RyaW5nW10gPSBbXTtcbiAgICAgICAgY29uc3QgdHJlbmRzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBjb25zdCBwZW9wbGU6IHN0cmluZ1tdID0gW107XG4gICAgICAgIGNvbnN0IG9iamVjdHM6IHN0cmluZ1tdID0gW107XG5cbiAgICAgICAgZm9yIChjb25zdCBlbCBvZiBzZWxlY3RlZEltYWdlcykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwic2VsZWN0ZWQgSU1BR0U6XCIsIGVsKTtcbiAgICAgICAgICBkZXNjcmlwdGlvbnMucHVzaChlbC5kZXNjcmlwdGlvbik7XG4gICAgICAgICAgaWRzLnB1c2goZWwudXJsKTtcbiAgICAgICAgICAoZWwudGFncyB8fCBbXSkuZm9yRWFjaCgodCkgPT4gdGFncy5wdXNoKHQpKTtcbiAgICAgICAgICBpZiAoZWwuYWlTdHlsZSkgc3R5bGVzLnB1c2goZWwuYWlTdHlsZSk7XG4gICAgICAgICAgLy8gaWYgKGVsLmNvbW11bml0eSkgY29tbXVuaXRpZXMucHVzaChlbC5jb21tdW5pdHkpO1xuICAgICAgICAgIC8vIGlmIChlbC5haVRyZW5kKSB0cmVuZHMucHVzaChlbC5haVRyZW5kKTtcblxuICAgICAgICAgIC8vIGlmIChlbC5haVBlb3BsZSkge1xuICAgICAgICAgIC8vICAgKGVsLmFpUGVvcGxlIHx8IFtdKS5mb3JFYWNoKCh0KSA9PiBwZW9wbGUucHVzaCh0KSk7XG4gICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgLy8gaWYgKGVsLmFpT2JqZWN0cykgb2JqZWN0cy5wdXNoKGVsLmFpT2JqZWN0cyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzdG9yZSB0aGUgbGluZWFnZVxuICAgICAgICBzZXRTZWxlY3RlZFBhcmVudElEcyhpZHMpO1xuXG4gICAgICAgIC8vIGhlbHBmdWwgZGUtZHVwZSArIHRyaW1cbiAgICAgICAgY29uc3QgdW5pcSA9IChhcnI6IHN0cmluZ1tdKSA9PlxuICAgICAgICAgIEFycmF5LmZyb20obmV3IFNldChhcnIuZmlsdGVyKEJvb2xlYW4pLm1hcCgocykgPT4gcy50cmltKCkpKSk7XG5cbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgICAvLyBrZWVwIGNvbXBhdGliaWxpdHkgd2l0aCBleGlzdGluZyBzZXJ2ZXIgY29kZVxuICAgICAgICAgIHByb21wdDogZGVzY3JpcHRpb25zLmpvaW4oXCIsIFwiKSB8fCBcInV0b3BpYXNcIixcbiAgICAgICAgICBhZGplY3RpdmVzOiB1bmlxKHRhZ3MpLmpvaW4oXCIsIFwiKSxcbiAgICAgICAgICAvLyBuZXcgcmljaCBjb250ZXh0XG4gICAgICAgICAgc3R5bGVzOiB1bmlxKHN0eWxlcyksXG4gICAgICAgICAgY29tbXVuaXRpZXM6IHVuaXEoY29tbXVuaXRpZXMpLFxuICAgICAgICAgIHRyZW5kczogdW5pcSh0cmVuZHMpLFxuICAgICAgICAgIGRlc2NyaXB0aW9ucywgLy8gZnVsbCBsaXN0XG4gICAgICAgICAgcGFyZW50SWRzOiBpZHMsIC8vIHNvIHNlcnZlciBjYW4gZWNoby9zdG9yZSBsaW5lYWdlXG4gICAgICAgICAgcGVvcGxlOiB1bmlxKHBlb3BsZSksXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9nZW5lcmF0ZUltYWdlYCwge1xuICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcblxuICAgICAgICBzZXRSZW1peGVkUHJvbXB0KGRhdGEucmVtaXhlZFByb21wdCB8fCBcIlwiKTtcbiAgICAgICAgc2V0VGV4dChkYXRhLnJlbWl4ZWRQcm9tcHQgfHwgXCJcIik7XG4gICAgICAgIGlmICh0YWdzLmxlbmd0aCkgc2V0V29yZHModW5pcSh0YWdzKSk7XG5cbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3IgfHwgXCJHZW5lcmF0aW9uIGZhaWxlZFwiKTtcbiAgICAgICAgc2V0R2VuZXJhdGVkSW1hZ2UoZGF0YS5pbWFnZVVybCk7XG4gICAgICAgIHNldEltYWdlKGRhdGEuaW1hZ2VVcmwpOyAvLyBpZiB5b3Ugd2FudCB0aGUgdXBsb2FkZXIgcHJldmlldyBwb3B1bGF0ZWQgdG9vXG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgc2V0RXJyb3IoXCJyZW1peCBnZW5lcmF0aW9uIGZhaWxlZFwiKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHNldFJlbWl4TG9hZGluZyhmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFJlbWl4TG9hZGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGdlbmVyYXRlUmVtaXhDb2xsYWdlID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmIChzZWxlY3RlZEltYWdlcy5sZW5ndGggPCAyKSByZXR1cm47XG4gICAgc2V0UmVtaXhMb2FkaW5nKHRydWUpO1xuICAgIHNldEdlbmVyYXRlZEltYWdlKG51bGwpO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBpZHMgPSBzZWxlY3RlZEltYWdlcy5tYXAoKGkpID0+IGkudXJsKTtcbiAgICAgIHNldFNlbGVjdGVkUGFyZW50SURzKGlkcyk7XG5cbiAgICAgIGNvbnN0IGRhdGFVcmwgPSAoYXdhaXQgbW9zYWljQmxlbmQoaWRzLCB7XG4gICAgICAgIHNpemU6IDEwMjQsXG4gICAgICAgIGJsb2NrOiAzMixcbiAgICAgICAgcmV0dXJuVHlwZTogXCJkYXRhVVJMXCIsXG4gICAgICAgIHNlZWQ6IHVuZGVmaW5lZCxcbiAgICAgIH0pKSBhcyBzdHJpbmc7XG5cbiAgICAgIGlmICghdGV4dCkgc2V0VGV4dChcImNvbGxhZ2Ugb2YgZnJhZ21lbnRzXCIpO1xuICAgICAgaWYgKHdvcmRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zdCB0YWdzID0gc2VsZWN0ZWRJbWFnZXMuZmxhdE1hcCgoaSkgPT4gaS50YWdzIHx8IFtdKTtcbiAgICAgICAgc2V0V29yZHModGFncyk7XG4gICAgICB9XG4gICAgICBzZXRJbWFnZShkYXRhVXJsKTtcbiAgICAgIHNldENvbGxhZ2VkSW1hZ2UoZGF0YVVybCk7XG4gICAgfSBjYXRjaCB7XG4gICAgICBzZXRFcnJvcihcImNvbGxhZ2UgZmFpbGVkXCIpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRSZW1peExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyA9PT09PSBVbmlmaWVkIFVwbG9hZCAoc3VwcG9ydHMgbm9ybWFsICsgcmVtaXgpXG4gIGNvbnN0IHVwTG9hZEltYWdlID0gYXN5bmMgKFxuICAgIF9pbWFnZTogc3RyaW5nLFxuICAgIGV4dHJhcz86IHtcbiAgICAgIHBhcmVudElkcz86IHN0cmluZ1tdO1xuICAgICAgcmVtaXhlZFByb21wdD86IHN0cmluZztcbiAgICAgIHRhZ3NPdmVycmlkZT86IHN0cmluZ1tdO1xuICAgIH1cbiAgKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldFVwbG9hZExvYWRpbmcodHJ1ZSk7XG4gICAgICBjb25zdCBwcm9tcHRUZXh0ID0gdGV4dEFyZWEuY3VycmVudD8udmFsdWUgPz8gXCJcIjtcblxuICAgICAgaWYgKF9pbWFnZSAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvY2xvdWRpbmFyeS91cGxvYWRgLCB7XG4gICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICBoZWFkZXJzOiB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgaW1hZ2VVcmw6IF9pbWFnZSxcbiAgICAgICAgICAgIHRpdGxlOiBwcm9tcHRUZXh0IHx8IFwiX1wiLFxuICAgICAgICAgICAgdGFnczogam9pbldpdGhDb21tYShleHRyYXM/LnRhZ3NPdmVycmlkZSA/PyB3b3JkcyksXG4gICAgICAgICAgICBjbGFzc2VzOiBqb2luV2l0aENvbW1hKGNsYXNzZXMpLFxuICAgICAgICAgICAgY29tbXVuaXR5LFxuICAgICAgICAgICAgcGFyZW50SWRzOiBleHRyYXM/LnBhcmVudElkcyxcbiAgICAgICAgICAgIHJlbWl4ZWRQcm9tcHQ6IGV4dHJhcz8ucmVtaXhlZFByb21wdCxcbiAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgIHNldEVycm9yKFwidGhpcyBpbWFnZSBpcyBiYWRcIik7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGRhdGEuZXJyb3IgfHwgXCJVcGxvYWQgZmFpbGVkXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IGNhcmQ6IEltYWdlQ2FyZFByb3BzID0ge1xuICAgICAgICAgICAgdGl0bGU6IGRhdGEudGl0bGUsXG4gICAgICAgICAgICB1cmw6IGRhdGEudXJsLFxuICAgICAgICAgICAgdGFnczogZGF0YS50YWdzLFxuICAgICAgICAgICAgYWlDYXB0aW9uOiBkYXRhLmNhcHRpb24sXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZGF0YS5hbHQgfHwgXCJVbnRpdGxlZFwiLFxuICAgICAgICAgICAgYWlUaXRsZTogZGF0YS5haV90aXRsZSxcbiAgICAgICAgICAgIGFpVmliZTogZGF0YS5haV92aWJlLFxuICAgICAgICAgICAgYWlPYmplY3RzOiBkYXRhLmFpX29iamVjdHMsXG4gICAgICAgICAgICBhaUZlZWxpbmc6IGRhdGEuYWlfZmVlbGluZyxcbiAgICAgICAgICAgIGlkOiBkYXRhLmlkLFxuICAgICAgICAgICAgY29tbXVuaXR5OiBkYXRhLmNvbW11bml0eSxcbiAgICAgICAgICAgIHBhcmVudElkczogZGF0YS5wYXJlbnRJZHMsXG4gICAgICAgICAgICBhaV9zb19tZV90eXBlOiBkYXRhLmFpU29NZVR5cGUsXG4gICAgICAgICAgICBhaVN0eWxlOiBkYXRhLmFpU3R5bGUsXG4gICAgICAgICAgICBhaVRyZW5kOiBkYXRhLmFpVHJlbmQsXG4gICAgICAgICAgICBhaVBlb3BsZTogZGF0YS5haVBlb3BsZSxcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgc2hhcmVJbWFnZVRvU29ja2V0KGNhcmQpO1xuICAgICAgICAgIHBvb3JJbWFnZUludG9Db3VsZHJvbihjYXJkKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0RXJyb3IoXCJBbGNoeW1pc3QsIHlvdSBuZWVkIHRvIGludmVudCBhIHNjZW5lXCIpO1xuICAgICAgfVxuICAgIH0gY2F0Y2gge1xuICAgICAgc2V0RXJyb3IoXCJpbWFnZSBpcyBiYWRcIik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIC8vIHJlc2V0IFVJXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHNldFVwbG9hZExvYWRpbmcoZmFsc2UpO1xuICAgICAgc2V0U2hvd1VwbG9hZChmYWxzZSk7XG4gICAgICBzZXRJbWFnZShudWxsKTtcbiAgICAgIHNldFRleHQoXCJcIik7XG4gICAgICBzZXRDb21tdW5pdHkoXCJcIik7XG4gICAgICBzZXRDbGFzc2VzKFtdKTtcbiAgICAgIHNldFdvcmRzKFtdKTtcbiAgICAgIHNldEdlbmVyYXRlZEltYWdlKG51bGwpO1xuICAgICAgc2V0Q29sbGFnZWRJbWFnZShudWxsKTtcbiAgICAgIHNldFNlbGVjdGVkUGFyZW50SURzKFtdKTtcbiAgICAgIHNldFNlbGVjdGVkSW1hZ2VzKFtdKTtcbiAgICAgIHNldFNob3dSZW1peGVyKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gPT09PT0gRmlsZSAmIHNvY2tldCBoZWxwZXJzXG4gIGNvbnN0IGhhbmRsZUltYWdlQ2hhbmdlID0gKGU6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgZmlsZSA9IGUudGFyZ2V0LmZpbGVzPy5bMF07XG4gICAgaWYgKGZpbGUpIHtcbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICByZWFkZXIub25sb2FkZW5kID0gKCkgPT4gc2V0SW1hZ2UocmVhZGVyLnJlc3VsdCBhcyBzdHJpbmcpO1xuICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBzaGFyZUltYWdlVG9Tb2NrZXQgPSAoX2ltYWdlOiBJbWFnZUNhcmRQcm9wcykgPT4ge1xuICAgIHNvY2tldFJlZi5jdXJyZW50Py5lbWl0KFwiaGVsbG9cIiwgX2ltYWdlKTtcbiAgfTtcbiAgY29uc3QgcG9vckltYWdlSW50b0NvdWxkcm9uID0gKF9pbWFnZTogSW1hZ2VDYXJkUHJvcHMpID0+IHtcbiAgICBzZXROZXdzKChwcmV2KSA9PiBbX2ltYWdlLCAuLi5wcmV2XSk7XG4gICAgc2hvd1N1Y2NlcygpO1xuICAgIHNldEltYWdlKG51bGwpO1xuICAgIHNldEdlbmVyYXRlZEltYWdlKG51bGwpO1xuICAgIHNldFNob3dHYWxsZXJ5KGZhbHNlKTtcbiAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICBzZXRVcGxvYWRMb2FkaW5nKGZhbHNlKTtcbiAgICBzZXRTaG93VXBsb2FkKGZhbHNlKTtcbiAgICBzZXRUZXh0KFwiXCIpO1xuICAgIHNldFdvcmRzKFtdKTtcbiAgICBzZXRHZW5lcmF0ZWRJbWFnZShudWxsKTtcbiAgfTtcblxuICAvLyA9PT09PSBTdWJtaXRcbiAgY29uc3QgaGFuZGxlU3VibWl0ID0gYXN5bmMgKGU6IFJlYWN0LkZvcm1FdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuXG4gICAgaWYgKGltYWdlKSB7XG4gICAgICBhd2FpdCB1cExvYWRJbWFnZShpbWFnZSk7XG4gICAgfSBlbHNlIGlmIChnZW5lcmF0ZWRJbWFnZSkge1xuICAgICAgYXdhaXQgdXBMb2FkSW1hZ2UoZ2VuZXJhdGVkSW1hZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIC8vIG5vIGltYWdlIHByb3ZpZGVkXG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhc0Zvcm1EYXRhID1cbiAgICAhIWltYWdlIHx8XG4gICAgISFnZW5lcmF0ZWRJbWFnZSB8fFxuICAgIHRleHQudHJpbSgpLmxlbmd0aCA+IDAgfHxcbiAgICB3b3Jkcy5sZW5ndGggPiAwIHx8XG4gICAgY2xhc3Nlcy5sZW5ndGggPiAwIHx8XG4gICAgY29tbXVuaXR5LnRyaW0oKS5sZW5ndGggPiAwO1xuXG4gIC8vID09PT09IFJlbmRlclxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWFpbkNvbnRhaW5lclwiPlxuICAgICAgPGZvcm1cbiAgICAgICAgb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH1cbiAgICAgICAgY2xhc3NOYW1lPXt1cGxvYWRpbmcgPyBcInVwbG9hZGluZyB1cGxvYWRlclwiIDogXCJ1cGxvYWRlclwifVxuICAgICAgPlxuICAgICAgICA8cD5jb250cmlidXRlIHRvIHRoZSBpbWFnZSBlY29sb2d5IHNpbXVsYXRpb248L3A+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1cGxvYWRlckJ1dHRvbnNcIj5cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGh0bWxGb3I9XCJpbWFnZS11cGxvYWRcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtcbiAgICAgICAgICAgICAgIWxvYWRpbmdcbiAgICAgICAgICAgICAgICA/IFwiaW1nVXBsb2FkQnRuIGFjdGl2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgICAgICA6IFwiaW1nVXBsb2FkQnRuIHBhc3NpdmUgc3VwZXItZGVmYXVsdFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2ltYWdlID8gXCJ1cGxvYWQgYW5vdGhlciBpbWFnZVwiIDogXCJ1cGxvYWQgbmV3IGltYWdlXCJ9XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGlkPVwiaW1hZ2UtdXBsb2FkXCJcbiAgICAgICAgICAgIHR5cGU9XCJmaWxlXCJcbiAgICAgICAgICAgIGFjY2VwdD1cImltYWdlLypcIlxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUltYWdlQ2hhbmdlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic3Itb25seVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJpbWFnZVJlc3VsdENvbnRhaW5lclwiPlxuICAgICAgICAgIHtcIiBcIn1cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlUmVzdWx0XCI+XG4gICAgICAgICAgICB7aW1hZ2UgPyAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2xvc2VidG5cIlxuICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRJbWFnZShudWxsKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBYXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBhbHQ9XCJQcmV2aWV3XCIgY2xhc3NOYW1lPVwic3ViSW1hZ2VcIiAvPlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgICAge3VwbG9hZGluZyA/IDxkaXYgY2xhc3NOYW1lPVwibG9hZGVyQW5pbVwiPjwvZGl2PiA6IG51bGx9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtlcnJvciA/IFwidGV4dGlucHV0cyBlcnJvclwiIDogXCJ0ZXh0aW5wdXRzXCJ9PlxuICAgICAgICAgIDxwPmltYWdlIGRlc2NyaXB0aW9uPC9wPlxuICAgICAgICAgIDx0ZXh0YXJlYVxuICAgICAgICAgICAgcmVmPXt0ZXh0QXJlYX1cbiAgICAgICAgICAgIGlkPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZT17dGV4dH1cbiAgICAgICAgICAgIGF1dG9Db3JyZWN0PVwiZmFsc2VcIlxuICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUZXh0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZGVzY3JpYmUgdGhlIGltYWdlXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ZXJyb3IgPyBcIndvcmRpbnB1dHMgZXJyb3JcIiA6IFwid29yZGlucHV0c1wifT5cbiAgICAgICAgICA8cD5pbWFnZSB0YWdnaW5nPC9wPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgdmFsdWU9e2N1cnJlbnRXb3JkfVxuICAgICAgICAgICAgYXV0b0NvcnJlY3Q9XCJmYWxzZVwiXG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlSW5wdXRDaGFuZ2V9XG4gICAgICAgICAgICBvbktleURvd249e2hhbmRsZUtleURvd259XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJtdC0yIHAtMiBib3JkZXIgcm91bmRlZC1tZFwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIm9wdGlvbmFsOiB0YWcgdGhlIGltYWdlXCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1yb3ctd3JhcCBhZGpCdXR0b25zXCI+XG4gICAgICAgICAgICB7d29yZHMubWFwKCh3b3JkLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAga2V5PXtgJHt3b3JkfS0ke2luZGV4fWB9XG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlUmVtb3ZlV29yZChpbmRleCl9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWRqQnRuXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHt3b3JkfSDinJZcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Vycm9yID8gXCJ0ZXh0aW5wdXRzIGVycm9yXCIgOiBcInRleHRpbnB1dHNcIn0+XG4gICAgICAgICAgPHA+aW1hZ2UgY2xhc3NpZmljYXRpb248L3A+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICB2YWx1ZT17Y3VycmVudENsYXNzfVxuICAgICAgICAgICAgYXV0b0NvcnJlY3Q9XCJmYWxzZVwiXG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2xhc3NJbnB1dENoYW5nZX1cbiAgICAgICAgICAgIG9uS2V5RG93bj17aGFuZGxlQ2xhc3NLZXlEb3dufVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibXQtMiBwLTIgYm9yZGVyIHJvdW5kZWQtbWRcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJvcHRpb25hbDogaW1hZ2UgcG9wdWxhdGlvbi90eXBlXCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1yb3ctd3JhcCBhZGpCdXR0b25zXCI+XG4gICAgICAgICAgICB7Y2xhc3Nlcy5tYXAoKGNscywgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIGtleT17YCR7Y2xzfS0ke2luZGV4fWB9XG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlUmVtb3ZlQ2xhc3MoaW5kZXgpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFkakJ0blwiXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y2xzfSDinJZcbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Vycm9yID8gXCJ0ZXh0aW5wdXRzIGVycm9yXCIgOiBcInRleHRpbnB1dHNcIn0+XG4gICAgICAgICAgPHA+Y29tbXVuaXR5PC9wPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1yb3ctd3JhcCBhZGpCdXR0b25zXCI+XG4gICAgICAgICAgICB7YXZhaWxhYmxlQ29tbXVuaXRpZXMubWFwKChjb21tKSA9PiAoXG4gICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICBrZXk9e2NvbW19XG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0Q29tbXVuaXR5KGNvbW0pfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGFkakJ0biAke2NvbW11bml0eSA9PT0gY29tbSA/IFwiYWN0aXZlXCIgOiBcIlwifWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Y29tbX1cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIHZhbHVlPXtjb21tdW5pdHl9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldENvbW11bml0eShlLnRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpKX1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwib3Igd3JpdGUgeW91ciBvd24gY29tbXVuaXR5XCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm10LTIgcC0yIGJvcmRlciByb3VuZGVkLW1kXCJcbiAgICAgICAgICAgIGF1dG9Db3JyZWN0PVwiZmFsc2VcIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e1xuICAgICAgICAgICAgIWhhc0Zvcm1EYXRhID8gXCJ1cGxvYWRlckJ1dHRvbnMgcmlnaHRcIiA6IFwidXBsb2FkZXJCdXR0b25zIGJldHdlZW5cIlxuICAgICAgICAgIH1cbiAgICAgICAgPlxuICAgICAgICAgIHtoYXNGb3JtRGF0YSAmJiAoXG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJzdXBlci1kZWZhdWx0XCIgb25DbGljaz17Y2xlYXJGb3JtfT5cbiAgICAgICAgICAgICAgY2xlYXIgZm9ybVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICAgIGxvYWRpbmdcbiAgICAgICAgICAgICAgICA/IFwicGFzc2l2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgICAgICA6IGdlbmVyYXRlZEltYWdlXG4gICAgICAgICAgICAgICAgPyBcImFjdGl2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgICAgICA6IGltYWdlXG4gICAgICAgICAgICAgICAgPyBcImFjdGl2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgICAgICA6IFwicGFzc2l2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bG9hZGluZyA/IFwibG9hZGluZyBjb250ZW50XCIgOiA8PnVwbG9hZDwvPn1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICB7LyogT1BUSU9OQUw6IGdlbmVyYXRlIGZyb20gcHJvbXB0XG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICBvbkNsaWNrPXtnZW5lcmF0ZUltYWdlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXshbG9hZGluZyA/IFwiYWN0aXZlXCIgOiBcInBhc3NpdmVcIn1cbiAgICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgICAgc3R5bGU9e3sgbWFyZ2luTGVmdDogOCB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtnZW5lcmF0ZWRJbWFnZSA/IFwicmVnZW5lcmF0ZSAoQUkpXCIgOiBcImdlbmVyYXRlIChBSSlcIn1cbiAgICAgICAgICA8L2J1dHRvbj4gKi99XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHtzdWNjZXMgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3VjY2VzXCI+XG4gICAgICAgICAgICA8cD51cGxvYWQgY29tcGxldGU8L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICAgIHtlcnJvciAmJiBlcnJvciAhPT0gXCJcIiAmJiAoXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic3VjY2VzIGVycm9yXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgc2V0RXJyb3IoXCJcIik7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxwPntlcnJvcn08L3A+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Zvcm0+XG5cbiAgICAgIHsvKiBNSURETEU6IEdhbGxlcnkgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdhbGxlcnlcIj5cbiAgICAgICAgPEdhbGxlcnlcbiAgICAgICAgICBuZXdzPXtuZXdzfVxuICAgICAgICAgIGNvbW11bml0eUNhdGVnb3JpZXM9e2F2YWlsYWJsZUNvbW11bml0aWVzfVxuICAgICAgICAgIHNlbGVjdGVkSW1hZ2VzPXtzZWxlY3RlZEltYWdlc31cbiAgICAgICAgICBvblRvZ2dsZVNlbGVjdGlvbj17b25Ub2dnbGVTZWxlY3Rpb259XG4gICAgICAgICAgb25PcGVuUmVtaXhlcj17KCkgPT4ge1xuICAgICAgICAgICAgc2V0U2hvd1JlbWl4ZXIodHJ1ZSk7XG4gICAgICAgICAgICBzbmFwVG9QYW5lKFwicmVtaXhlclwiKTsgLy8gc2Nyb2xscyB0byB0aGUgcmlnaHQgcGFuZSBvbiBtb2JpbGVcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgICB7IWlzRmV0Y2hpbmdSZWNlbnQgJiYgKFxuICAgICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAxNiB9fT5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFkakJ0blwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGZldGNoUmVjZW50SW1hZ2VzKCl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIGxvYWQgbW9yZVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cblxuICAgICAgey8qIFJJR0hUOiBSZW1peGVyIHBhbmVsICh1c2VkIHRvIGJlIHRoZSBvdmVybGF5KSAqL31cbiAgICAgIDxhc2lkZSBjbGFzc05hbWU9e2ByZW1peGVyIG9wZW5cIn1gfSByZWY9e3JlbWl4ZXJSZWZ9PlxuICAgICAgICA8cD5yZW1peCBpbWFnZXMgZnJvbSB0aGUgZWNvbG9neSBzaW11bGF0aW9uPC9wPlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXBsb2FkZXJCdXR0b25zIGdhbGxlcnlVcGxvYWRlckJ1dHRvbnNcIj5cbiAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBkaXNhYmxlZD17cmVtaXhMb2FkaW5nfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtcbiAgICAgICAgICAgICAgIXJlbWl4TG9hZGluZyA/IFwiYWN0aXZlIHN1cGVyLWRlZmF1bHRcIiA6IFwicGFzc2l2ZSBzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgZ2VuZXJhdGVSZW1peEltYWdlKCk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtnZW5lcmF0ZWRJbWFnZSA/IFwicmVjcmVhdGUgQUkgcmVtaXhcIiA6IFwiQUkgcmVtaXhcIn1cbiAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGRpc2FibGVkPXtyZW1peExvYWRpbmd9XG4gICAgICAgICAgICBjbGFzc05hbWU9e1xuICAgICAgICAgICAgICAhcmVtaXhMb2FkaW5nID8gXCJhY3RpdmUgc3VwZXItZGVmYXVsdFwiIDogXCJwYXNzaXZlIHN1cGVyLWRlZmF1bHRcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb25DbGljaz17KGUpID0+IHtcbiAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICBnZW5lcmF0ZVJlbWl4Q29sbGFnZSgpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y29sbGFnZWRJbWFnZSA/IFwicmVibGVuZCBjb2xsYWdlXCIgOiBcImNvbGxhZ2VcIn1cbiAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgIHsvKiA8YnV0dG9uXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgaW1nVG9VcGxvYWQgPSBnZW5lcmF0ZWRJbWFnZSB8fCBjb2xsYWdlZEltYWdlO1xuICAgICAgICAgICAgICBpZiAoaW1nVG9VcGxvYWQpIHtcbiAgICAgICAgICAgICAgICB1cExvYWRJbWFnZShpbWdUb1VwbG9hZCwge1xuICAgICAgICAgICAgICAgICAgcGFyZW50SWRzOiBzZWxlY3RlZFBhcmVudElkcyxcbiAgICAgICAgICAgICAgICAgIHJlbWl4ZWRQcm9tcHQ6IHJlbWl4ZWRQcm9tcHQgfHwgdGV4dCxcbiAgICAgICAgICAgICAgICAgIHRhZ3NPdmVycmlkZTogd29yZHMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBjbGFzc05hbWU9e1xuICAgICAgICAgICAgICByZW1peExvYWRpbmdcbiAgICAgICAgICAgICAgICA/IFwicGFzc2l2ZVwiXG4gICAgICAgICAgICAgICAgOiBnZW5lcmF0ZWRJbWFnZSB8fCBjb2xsYWdlZEltYWdlXG4gICAgICAgICAgICAgICAgPyBcImFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgOiBcInBhc3NpdmVcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtyZW1peExvYWRpbmcgPyBcImxvYWRpbmcgY29udGVudFwiIDogPD5wb3VyIGludG8gcG90aW9uPC8+fVxuICAgICAgICAgIDwvYnV0dG9uPiAqL31cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaW1hZ2VSZXN1bHRDb250YWluZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImltYWdlUmVzdWx0XCI+XG4gICAgICAgICAgICB7cmVtaXhMb2FkaW5nID8gKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvYWRlckFuaW1cIj48L2Rpdj5cbiAgICAgICAgICAgICkgOiBnZW5lcmF0ZWRJbWFnZSA/IChcbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHNyYz17Z2VuZXJhdGVkSW1hZ2V9XG4gICAgICAgICAgICAgICAgYWx0PVwiR2VuZXJhdGVkXCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcm91bmRlZC1sZ1wiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApIDogY29sbGFnZWRJbWFnZSA/IChcbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHNyYz17Y29sbGFnZWRJbWFnZX1cbiAgICAgICAgICAgICAgICBhbHQ9XCJHZW5lcmF0ZWRcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCByb3VuZGVkLWxnXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiIHJlbWl4U2VsZWN0aW9uXCJcbiAgICAgICAgICAgICAgICAgIHN0eWxlPXtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIFtcIi0tY29sc1wiIGFzIGFueV06IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguY2VpbChNYXRoLnNxcnQoc2VsZWN0ZWRJbWFnZXMubGVuZ3RoKSlcbiAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIFtcIi0tcm93c1wiIGFzIGFueV06IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAgICAgMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguY2VpbChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJbWFnZXMubGVuZ3RoIC9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLm1heChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLmNlaWwoTWF0aC5zcXJ0KHNlbGVjdGVkSW1hZ2VzLmxlbmd0aCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgW1wiLS1nYXBcIiBhcyBhbnldOiBcIjhweFwiLFxuICAgICAgICAgICAgICAgICAgICAgIFtcIi0tcmFkaXVzXCIgYXMgYW55XTogXCI4cHhcIixcbiAgICAgICAgICAgICAgICAgICAgfSBhcyBSZWFjdC5DU1NQcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3NlbGVjdGVkSW1hZ2VzLm1hcCgoaW1nLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17aW1nLnVybH0ga2V5PXtpbmRleH0gLz5cbiAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAge3NlbGVjdGVkSW1hZ2VzLmxlbmd0aCA8IDIgJiYgKFxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiaW1hZ2VOb3RpY2VcIj5cbiAgICAgICAgICAgICAgICAgICAgdSBuZWVkIGF0IGxlYXN0IDIgaW1hZ2VzIGZyb20gdGhlIGRiXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3NlbGVjdGVkSW1hZ2VzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXBsb2FkZXJCdXR0b25zIHJpZ2h0XCI+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbGVhclJlbWl4U2VsZWN0aW9ufVxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzdXBlci1kZWZhdWx0XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgY2xlYXIgcmVtaXhcbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC9hc2lkZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiR2FsbGVyeSIsImlvIiwibW9zYWljQmxlbmQiLCJVcGxvYWQiLCJpbWFnZSIsInNldEltYWdlIiwidGV4dCIsInNldFRleHQiLCJ0ZXh0QXJlYSIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwidXBsb2FkaW5nIiwic2V0VXBsb2FkTG9hZGluZyIsInNob3dVcGxvYWQiLCJzZXRTaG93VXBsb2FkIiwic2hvd0dhbGxlcnkiLCJzZXRTaG93R2FsbGVyeSIsImdlbmVyYXRlZEltYWdlIiwic2V0R2VuZXJhdGVkSW1hZ2UiLCJyZW1peGVkUHJvbXB0Iiwic2V0UmVtaXhlZFByb21wdCIsIndvcmRzIiwic2V0V29yZHMiLCJjdXJyZW50V29yZCIsInNldEN1cnJlbnRXb3JkIiwiY2xhc3NlcyIsInNldENsYXNzZXMiLCJjdXJyZW50Q2xhc3MiLCJzZXRDdXJyZW50Q2xhc3MiLCJjb21tdW5pdHkiLCJzZXRDb21tdW5pdHkiLCJhdmFpbGFibGVDb21tdW5pdGllcyIsInNldEF2YWlsYWJsZUNvbW11bml0aWVzIiwibmV3cyIsInNldE5ld3MiLCJsb2FkSW5kZXgiLCJzZXRMb2FkSW5kZXgiLCJpc0ZldGNoaW5nUmVjZW50Iiwic2V0SXNGZXRjaGluZ1JlY2VudCIsImVycm9yIiwic2V0RXJyb3IiLCJzdWNjZXMiLCJzZXRTdWNjZXMiLCJzZWxlY3RlZEltYWdlcyIsInNldFNlbGVjdGVkSW1hZ2VzIiwic2hvd1JlbWl4ZXIiLCJzZXRTaG93UmVtaXhlciIsImNvbGxhZ2VkSW1hZ2UiLCJzZXRDb2xsYWdlZEltYWdlIiwicmVtaXhMb2FkaW5nIiwic2V0UmVtaXhMb2FkaW5nIiwic2VsZWN0ZWRQYXJlbnRJZHMiLCJzZXRTZWxlY3RlZFBhcmVudElEcyIsImRpZExvYWRSZWYiLCJpbkZsaWdodFJlZiIsImNvbnRhaW5lclJlZiIsInJlbWl4ZXJSZWYiLCJzbmFwVG9QYW5lIiwicGFuZSIsImVsIiwiY3VycmVudCIsImNoaWxkcmVuIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJzY3JvbGxUbyIsImxlZnQiLCJvZmZzZXRMZWZ0IiwiYmVoYXZpb3IiLCJzb2NrZXRSZWYiLCJzdG9yZWRVc2VySWQiLCJzZXNzaW9uU3RvcmFnZSIsImdldEl0ZW0iLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJzZXRJdGVtIiwicyIsImF1dG9Db25uZWN0IiwiY29ubmVjdCIsIm9uUmVjZWl2ZSIsIm1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwib25Db25uZWN0Iiwib25IZWxsbyIsIm1zZyIsIm9uIiwib2ZmIiwiZGlzY29ubmVjdCIsImZldGNoUmVjZW50SW1hZ2VzIiwiYWMiLCJBYm9ydENvbnRyb2xsZXIiLCJyZXMiLCJmZXRjaCIsInNpZ25hbCIsImNhY2hlIiwib2siLCJFcnJvciIsInN0YXR1cyIsImRhdGEiLCJqc29uIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwibWFwcGVkIiwibWFwIiwiZCIsInRpdGxlIiwidXJsIiwidGFncyIsImFpQ2FwdGlvbiIsImNhcHRpb24iLCJkZXNjcmlwdGlvbiIsImFsdCIsImFpVGl0bGUiLCJhaV90aXRsZSIsImFpVmliZSIsImFpX3ZpYmUiLCJhaU9iamVjdHMiLCJhaV9vYmplY3RzIiwiYWlGZWVsaW5nIiwiYWlfZmVlbGluZyIsImlkIiwicGFyZW50SWRzIiwiYWlfc29fbWVfdHlwZSIsImFpU29NZVR5cGUiLCJhaVN0eWxlIiwiYWlUcmVuZCIsImFpUGVvcGxlIiwicHJldiIsImUiLCJuYW1lIiwiYWJvcnQiLCJ1bmlxdWVGcm9tTmV3cyIsImZyb20iLCJTZXQiLCJuIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwiZmlsdGVyIiwiQm9vbGVhbiIsInByZXNldHMiLCJtZXJnZWQiLCJzaG93U3VjY2VzIiwiZHVyYXRpb24iLCJzZXRUaW1lb3V0IiwiaGFuZGxlS2V5RG93biIsImtleSIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsImhhbmRsZUlucHV0Q2hhbmdlIiwidmFsdWUiLCJ0YXJnZXQiLCJlbmRzV2l0aCIsImhhbmRsZVJlbW92ZVdvcmQiLCJpbmRleCIsIl8iLCJpIiwiam9pbldpdGhDb21tYSIsImFyciIsImpvaW4iLCJoYW5kbGVDbGFzc0tleURvd24iLCJoYW5kbGVDbGFzc0lucHV0Q2hhbmdlIiwiaGFuZGxlUmVtb3ZlQ2xhc3MiLCJjbGVhclJlbWl4U2VsZWN0aW9uIiwiY2xlYXJGb3JtIiwiZ2VuZXJhdGVJbWFnZSIsInByb21wdFRleHQiLCJyZXNwb25zZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImltYWdlVXJsIiwicHJvbXB0Iiwib25Ub2dnbGVTZWxlY3Rpb24iLCJzb21lIiwiaW1nIiwiZ2VuZXJhdGVSZW1peEltYWdlIiwiZGVzY3JpcHRpb25zIiwiaWRzIiwic3R5bGVzIiwiY29tbXVuaXRpZXMiLCJ0cmVuZHMiLCJwZW9wbGUiLCJvYmplY3RzIiwicHVzaCIsImZvckVhY2giLCJ0IiwidW5pcSIsInBheWxvYWQiLCJhZGplY3RpdmVzIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyIiwiZ2VuZXJhdGVSZW1peENvbGxhZ2UiLCJkYXRhVXJsIiwic2l6ZSIsImJsb2NrIiwicmV0dXJuVHlwZSIsInNlZWQiLCJ1bmRlZmluZWQiLCJmbGF0TWFwIiwidXBMb2FkSW1hZ2UiLCJfaW1hZ2UiLCJleHRyYXMiLCJ0YWdzT3ZlcnJpZGUiLCJjYXJkIiwic2hhcmVJbWFnZVRvU29ja2V0IiwicG9vckltYWdlSW50b0NvdWxkcm9uIiwiaGFuZGxlSW1hZ2VDaGFuZ2UiLCJmaWxlIiwiZmlsZXMiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkZW5kIiwicmVzdWx0IiwicmVhZEFzRGF0YVVSTCIsImVtaXQiLCJoYW5kbGVTdWJtaXQiLCJoYXNGb3JtRGF0YSIsImRpdiIsImNsYXNzTmFtZSIsImZvcm0iLCJvblN1Ym1pdCIsInAiLCJsYWJlbCIsImh0bWxGb3IiLCJpbnB1dCIsInR5cGUiLCJhY2NlcHQiLCJvbkNoYW5nZSIsImJ1dHRvbiIsIm9uQ2xpY2siLCJzcmMiLCJ0ZXh0YXJlYSIsInJlZiIsImF1dG9Db3JyZWN0IiwicGxhY2Vob2xkZXIiLCJvbktleURvd24iLCJ3b3JkIiwiY2xzIiwiY29tbSIsImNvbW11bml0eUNhdGVnb3JpZXMiLCJvbk9wZW5SZW1peGVyIiwic3R5bGUiLCJtYXJnaW5Ub3AiLCJhc2lkZSIsImRpc2FibGVkIiwibWF4IiwiY2VpbCIsInNxcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Upload.tsx\n"));

/***/ })

});