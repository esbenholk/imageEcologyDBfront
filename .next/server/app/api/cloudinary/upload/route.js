"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/cloudinary/upload/route";
exports.ids = ["app/api/cloudinary/upload/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcloudinary%2Fupload%2Froute&page=%2Fapi%2Fcloudinary%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcloudinary%2Fupload%2Froute.ts&appDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcloudinary%2Fupload%2Froute&page=%2Fapi%2Fcloudinary%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcloudinary%2Fupload%2Froute.ts&appDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_ArtDocumentation_2024_ImageEcologySimulation_ecologyAPI_src_app_api_cloudinary_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/cloudinary/upload/route.ts */ \"(rsc)/./src/app/api/cloudinary/upload/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/cloudinary/upload/route\",\n        pathname: \"/api/cloudinary/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/cloudinary/upload/route\"\n    },\n    resolvedPagePath: \"D:\\\\ArtDocumentation\\\\2024_ImageEcologySimulation\\\\ecologyAPI\\\\src\\\\app\\\\api\\\\cloudinary\\\\upload\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_ArtDocumentation_2024_ImageEcologySimulation_ecologyAPI_src_app_api_cloudinary_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/cloudinary/upload/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjbG91ZGluYXJ5JTJGdXBsb2FkJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjbG91ZGluYXJ5JTJGdXBsb2FkJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2xvdWRpbmFyeSUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDQXJ0RG9jdW1lbnRhdGlvbiU1QzIwMjRfSW1hZ2VFY29sb2d5U2ltdWxhdGlvbiU1Q2Vjb2xvZ3lBUEklNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNBcnREb2N1bWVudGF0aW9uJTVDMjAyNF9JbWFnZUVjb2xvZ3lTaW11bGF0aW9uJTVDZWNvbG9neUFQSSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDMEQ7QUFDdkk7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmVuZHMtYWktZ2VuZXJhdG9yLz84ZTc4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXEFydERvY3VtZW50YXRpb25cXFxcMjAyNF9JbWFnZUVjb2xvZ3lTaW11bGF0aW9uXFxcXGVjb2xvZ3lBUElcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcY2xvdWRpbmFyeVxcXFx1cGxvYWRcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2Nsb3VkaW5hcnkvdXBsb2FkL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2xvdWRpbmFyeS91cGxvYWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2Nsb3VkaW5hcnkvdXBsb2FkL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiRDpcXFxcQXJ0RG9jdW1lbnRhdGlvblxcXFwyMDI0X0ltYWdlRWNvbG9neVNpbXVsYXRpb25cXFxcZWNvbG9neUFQSVxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxjbG91ZGluYXJ5XFxcXHVwbG9hZFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2xvdWRpbmFyeS91cGxvYWQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcloudinary%2Fupload%2Froute&page=%2Fapi%2Fcloudinary%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcloudinary%2Fupload%2Froute.ts&appDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/cloudinary/upload/route.ts":
/*!************************************************!*\
  !*** ./src/app/api/cloudinary/upload/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var cloudinary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cloudinary */ \"(rsc)/./node_modules/cloudinary/cloudinary.js\");\n/* harmony import */ var cloudinary__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cloudinary__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n\n\nfunction dedupLower(arr) {\n    const seen = {};\n    const out = [];\n    for (const t of arr){\n        const k = t.trim().toLowerCase();\n        if (k && !seen[k]) {\n            seen[k] = true;\n            out.push(t.trim());\n        }\n    }\n    return out;\n}\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\ncloudinary__WEBPACK_IMPORTED_MODULE_1__.v2.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET\n});\nasync function POST(request) {\n    try {\n        const { imageUrl, title, tags, parentIds, community } = await request.json();\n        // Upload image to Cloudinary\n        console.log(\"IMAGE UPLOAD\", title, tags, parentIds, community);\n        const result = await cloudinary__WEBPACK_IMPORTED_MODULE_1__.v2.uploader.upload(imageUrl, {\n            folder: \"imageEcology\",\n            context: {\n                alt: title,\n                caption: title,\n                parentIds: parentIds != null ? parentIds.toString() : \"\",\n                community: community != null ? community : null\n            },\n            moderation: \"aws_rek:\" + \"explicit_nudity:0.7:\" + \"hate_symbols:0.6:\" + \"suggestive:ignore:\" + \"violence:ignore:\" + \"visually_disturbing:ignore:\" + \"rude_gestures:ignore:\" + \"drugs:ignore:\" + \"tobacco:ignore:\" + \"alcohol:ignore:\" + \"gambling:ignore\"\n        });\n        // moderation check\n        const moderationArr = result.moderation;\n        const wasRejected = moderationArr?.some((m)=>m.status === \"rejected\" && m.kind.startsWith(\"aws_rek\"));\n        console.log(\"rejection\", wasRejected);\n        if (!wasRejected) {\n            console.log(\"image not rejected\", wasRejected);\n            const visionPrompt = `\nYou will be given an image from a user's social feed titled: \"${title}\".\n\nReturn ONLY minified JSON with these keys:\n{\"title\":\"\",\"caption\":\"\",\"altText\":\"\",\"so_me_type\":\"\",\"trend\":\"\",\"feeling\":\"\",\"tags\":[],\"vibe\":[],\"objects\":[],\"scenes\":[],\"people\":[],\"style\":\"\"}\n\nRules:\n- Output strictly minified JSON. No commentary, no newlines.\n- \"title\": ≤7 words, aligned with \"${title}\" (refine if needed).\n- \"caption\": ≤2 sentences.\n- \"altText\": ≤15 words, literal neutral description.\n- \"so_me_type\": a short label of the social media archetype (e.g., \"travel aesthetic\", \"haul review\").\n- \"trend\": short name of any identifiable trend (e.g., \"get ready with me\") or \"\".\n- \"feeling\": short phrase for emotional tone or desire.\n- \"tags\": up to 12 short tags (nouns/adjectives only; no hashtags/emojis).\n- \"vibe\": 3–7 mood or atmosphere words.\n- \"objects\": ≤8 concrete visible things.\n- \"scenes\": up to 3 concise scene descriptors (e.g., \"urban rooftop at sunset\").\n- \"people\": array of brief descriptors (age range, gender presentation, expression, celebrity if clear).\n\nSTYLE (critical for reproduction):\n- \"style\" must be a **single, coherent natural-language string** that can be reused directly as a generative image prompt.\n- It should describe:\n  • the medium (photograph, 3D render, illustration, etc.)\n  • the realism level (\"photorealistic\", \"hyperrealistic\", \"stylized\", \"cartoon\", etc.)\n  • lighting (type, quality, direction, time of day)\n  • color treatment (palette, tone, contrast)\n  • composition (framing, perspective)\n  • postprocessing or aesthetic look (film grain, cinematic grading, matte finish, etc.)\n  • influences or mood adjectives that help reproduce the image vibe.\n- If the source image is a photograph, the string MUST clearly state that it’s **“photograph” or “photorealistic photo”**, and must not include non-photo terms like “painting”, “illustration”, or “digital art”.\n- Use concise, comma-separated descriptive tokens suitable for an image model prompt.\n- Avoid fluff. Aim for ~1–3 short sentences or a comma-separated list.\n\nOutput minified JSON only.\n`;\n            const messages = [\n                {\n                    role: \"user\",\n                    content: [\n                        {\n                            type: \"text\",\n                            text: visionPrompt\n                        },\n                        {\n                            type: \"image_url\",\n                            image_url: {\n                                url: imageUrl\n                            }\n                        }\n                    ]\n                }\n            ];\n            const completion = await openai.chat.completions.create({\n                model: \"gpt-4o\",\n                messages,\n                temperature: 0.3,\n                response_format: {\n                    type: \"json_object\"\n                },\n                max_tokens: 400\n            });\n            console.log(\"openai answers\", completion);\n            const raw = completion.choices[0]?.message?.content ?? \"{}\";\n            let ai;\n            try {\n                ai = JSON.parse(raw);\n            } catch  {\n                ai = {};\n            }\n            const payload = {\n                title: String(ai?.title ?? title ?? \"\").trim(),\n                caption: String(ai?.caption ?? \"\").trim(),\n                altText: String(ai?.altText ?? \"\").trim(),\n                so_me_type: String(ai?.so_me_type ?? \"\").trim(),\n                feeling: String(ai?.feeling ?? \"\").trim(),\n                trend: String(ai?.trend ?? \"\").trim(),\n                style: String(ai?.style ?? \"\").trim(),\n                people: Array.isArray(ai?.people) ? ai.people.map(String) : [],\n                tags: Array.isArray(ai?.tags) ? ai.tags.map(String) : [],\n                vibe: Array.isArray(ai?.vibe) ? ai.vibe.map(String) : [],\n                objects: Array.isArray(ai?.objects) ? ai.objects.map(String) : []\n            };\n            const mergedTags = dedupLower([\n                ...payload.tags,\n                ...payload.vibe,\n                ...payload.objects\n            ]).slice(0, 25); // keep it tidy\n            let mergedTagsString = mergedTags.join(\",\");\n            if (tags != null) {\n                mergedTagsString += \", \" + tags;\n            }\n            console.log(\"OPENAI PAYLOAD\", payload);\n            await cloudinary__WEBPACK_IMPORTED_MODULE_1__.v2.uploader.explicit(result.public_id, {\n                type: \"upload\",\n                tags: mergedTagsString,\n                context: {\n                    caption: title,\n                    alt: payload.altText,\n                    ai_title: payload.title,\n                    ai_style: payload.style,\n                    ai_trend: payload.trend,\n                    ai_so_me_type: payload.so_me_type,\n                    ai_feeling: payload.feeling,\n                    ai_vibe: (payload.vibe || []).join(\", \"),\n                    ai_objects: (payload.objects || []).slice(0, 5).join(\", \"),\n                    community: community,\n                    parentIds: parentIds != null ? parentIds : \"\",\n                    ai_people: payload.people\n                }\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                url: result.secure_url,\n                publicId: result.public_id,\n                title: title,\n                alt: payload.altText,\n                ai_title: payload.title,\n                ai_vibe: (payload.vibe || []).join(\", \"),\n                ai_objects: (payload.objects || []).slice(0, 5).join(\", \"),\n                ai_style: payload.style,\n                ai_trend: payload.trend,\n                ai_so_me_type: payload.so_me_type,\n                community: community,\n                tags: mergedTags.concat(tags),\n                parentIds: parentIds != null && parentIds,\n                ai_people: payload.people\n            });\n        } else {\n            console.error(\"explicit image\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"image does not adhere to our policy\"\n            }, {\n                status: 500\n            });\n        }\n    } catch (error) {\n        console.error(\"Cloudinary upload error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to upload image\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/cloudinary/upload/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/core-js","vendor-chunks/lodash","vendor-chunks/cloudinary","vendor-chunks/cloudinary-core","vendor-chunks/q","vendor-chunks/formdata-node","vendor-chunks/ms","vendor-chunks/openai","vendor-chunks/form-data-encoder","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/humanize-ms","vendor-chunks/event-target-shim","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcloudinary%2Fupload%2Froute&page=%2Fapi%2Fcloudinary%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcloudinary%2Fupload%2Froute.ts&appDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArtDocumentation%5C2024_ImageEcologySimulation%5CecologyAPI&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();